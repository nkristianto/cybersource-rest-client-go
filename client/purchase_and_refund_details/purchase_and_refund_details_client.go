// Code generated by go-swagger; DO NOT EDIT.

package purchase_and_refund_details

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new purchase and refund details API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for purchase and refund details API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetPurchaseAndRefundDetails(params *GetPurchaseAndRefundDetailsParams) (*GetPurchaseAndRefundDetailsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetPurchaseAndRefundDetails gets purchase and refund details

  Download the Purchase and Refund Details
report. This report report includes all purchases and refund
transactions, as well as all activities related to transactions
resulting in an adjustment to the net proceeds.

*/
func (a *Client) GetPurchaseAndRefundDetails(params *GetPurchaseAndRefundDetailsParams) (*GetPurchaseAndRefundDetailsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPurchaseAndRefundDetailsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getPurchaseAndRefundDetails",
		Method:             "GET",
		PathPattern:        "/reporting/v3/purchase-refund-details",
		ProducesMediaTypes: []string{"application/hal+json"},
		ConsumesMediaTypes: []string{"application/json;charset=utf-8"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetPurchaseAndRefundDetailsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPurchaseAndRefundDetailsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getPurchaseAndRefundDetails: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
