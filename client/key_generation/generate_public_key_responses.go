// Code generated by go-swagger; DO NOT EDIT.

package key_generation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GeneratePublicKeyReader is a Reader for the GeneratePublicKey structure.
type GeneratePublicKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GeneratePublicKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGeneratePublicKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGeneratePublicKeyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGeneratePublicKeyOK creates a GeneratePublicKeyOK with default headers values
func NewGeneratePublicKeyOK() *GeneratePublicKeyOK {
	return &GeneratePublicKeyOK{}
}

/*GeneratePublicKeyOK handles this case with default header values.

Retrieved key.
*/
type GeneratePublicKeyOK struct {
	Payload *GeneratePublicKeyOKBody
}

func (o *GeneratePublicKeyOK) Error() string {
	return fmt.Sprintf("[POST /flex/v1/keys][%d] generatePublicKeyOK  %+v", 200, o.Payload)
}

func (o *GeneratePublicKeyOK) GetPayload() *GeneratePublicKeyOKBody {
	return o.Payload
}

func (o *GeneratePublicKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GeneratePublicKeyOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGeneratePublicKeyDefault creates a GeneratePublicKeyDefault with default headers values
func NewGeneratePublicKeyDefault(code int) *GeneratePublicKeyDefault {
	return &GeneratePublicKeyDefault{
		_statusCode: code,
	}
}

/*GeneratePublicKeyDefault handles this case with default header values.

Error retrieving key.
*/
type GeneratePublicKeyDefault struct {
	_statusCode int

	Payload *GeneratePublicKeyDefaultBody
}

// Code gets the status code for the generate public key default response
func (o *GeneratePublicKeyDefault) Code() int {
	return o._statusCode
}

func (o *GeneratePublicKeyDefault) Error() string {
	return fmt.Sprintf("[POST /flex/v1/keys][%d] generatePublicKey default  %+v", o._statusCode, o.Payload)
}

func (o *GeneratePublicKeyDefault) GetPayload() *GeneratePublicKeyDefaultBody {
	return o.Payload
}

func (o *GeneratePublicKeyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GeneratePublicKeyDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GeneratePublicKeyBody generate public key body
swagger:model GeneratePublicKeyBody
*/
type GeneratePublicKeyBody struct {

	// How the card number should be encrypted in the subsequent Tokenize Card request. Possible values are RsaOaep256 or None (if using this value the card number must be in plain text when included in the Tokenize Card request). The Tokenize Card request uses a secure connection (TLS 1.2+) regardless of what encryption type is specified.
	// Required: true
	EncryptionType *string `json:"encryptionType"`
}

// Validate validates this generate public key body
func (o *GeneratePublicKeyBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEncryptionType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GeneratePublicKeyBody) validateEncryptionType(formats strfmt.Registry) error {

	if err := validate.Required("generatePublicKeyRequest"+"."+"encryptionType", "body", o.EncryptionType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GeneratePublicKeyBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GeneratePublicKeyBody) UnmarshalBinary(b []byte) error {
	var res GeneratePublicKeyBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GeneratePublicKeyDefaultBody generate public key default body
swagger:model GeneratePublicKeyDefaultBody
*/
type GeneratePublicKeyDefaultBody struct {

	// links
	Links *GeneratePublicKeyDefaultBodyLinks `json:"_links,omitempty"`

	// response status
	ResponseStatus *GeneratePublicKeyDefaultBodyResponseStatus `json:"responseStatus,omitempty"`
}

// Validate validates this generate public key default body
func (o *GeneratePublicKeyDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResponseStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GeneratePublicKeyDefaultBody) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generatePublicKey default" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *GeneratePublicKeyDefaultBody) validateResponseStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.ResponseStatus) { // not required
		return nil
	}

	if o.ResponseStatus != nil {
		if err := o.ResponseStatus.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generatePublicKey default" + "." + "responseStatus")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GeneratePublicKeyDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GeneratePublicKeyDefaultBody) UnmarshalBinary(b []byte) error {
	var res GeneratePublicKeyDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GeneratePublicKeyDefaultBodyLinks generate public key default body links
swagger:model GeneratePublicKeyDefaultBodyLinks
*/
type GeneratePublicKeyDefaultBodyLinks struct {

	// documentation
	Documentation []*GeneratePublicKeyDefaultBodyLinksDocumentationItems0 `json:"documentation"`

	// next
	Next []*GeneratePublicKeyDefaultBodyLinksNextItems0 `json:"next"`

	// self
	Self *GeneratePublicKeyDefaultBodyLinksSelf `json:"self,omitempty"`
}

// Validate validates this generate public key default body links
func (o *GeneratePublicKeyDefaultBodyLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDocumentation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNext(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GeneratePublicKeyDefaultBodyLinks) validateDocumentation(formats strfmt.Registry) error {

	if swag.IsZero(o.Documentation) { // not required
		return nil
	}

	for i := 0; i < len(o.Documentation); i++ {
		if swag.IsZero(o.Documentation[i]) { // not required
			continue
		}

		if o.Documentation[i] != nil {
			if err := o.Documentation[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("generatePublicKey default" + "." + "_links" + "." + "documentation" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GeneratePublicKeyDefaultBodyLinks) validateNext(formats strfmt.Registry) error {

	if swag.IsZero(o.Next) { // not required
		return nil
	}

	for i := 0; i < len(o.Next); i++ {
		if swag.IsZero(o.Next[i]) { // not required
			continue
		}

		if o.Next[i] != nil {
			if err := o.Next[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("generatePublicKey default" + "." + "_links" + "." + "next" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GeneratePublicKeyDefaultBodyLinks) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generatePublicKey default" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GeneratePublicKeyDefaultBodyLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GeneratePublicKeyDefaultBodyLinks) UnmarshalBinary(b []byte) error {
	var res GeneratePublicKeyDefaultBodyLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GeneratePublicKeyDefaultBodyLinksDocumentationItems0 generate public key default body links documentation items0
swagger:model GeneratePublicKeyDefaultBodyLinksDocumentationItems0
*/
type GeneratePublicKeyDefaultBodyLinksDocumentationItems0 struct {

	// URI of the linked resource.
	Href string `json:"href,omitempty"`

	// HTTP method of the linked resource.
	Method string `json:"method,omitempty"`

	// Label of the linked resource.
	Title string `json:"title,omitempty"`
}

// Validate validates this generate public key default body links documentation items0
func (o *GeneratePublicKeyDefaultBodyLinksDocumentationItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GeneratePublicKeyDefaultBodyLinksDocumentationItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GeneratePublicKeyDefaultBodyLinksDocumentationItems0) UnmarshalBinary(b []byte) error {
	var res GeneratePublicKeyDefaultBodyLinksDocumentationItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GeneratePublicKeyDefaultBodyLinksNextItems0 generate public key default body links next items0
swagger:model GeneratePublicKeyDefaultBodyLinksNextItems0
*/
type GeneratePublicKeyDefaultBodyLinksNextItems0 struct {

	// URI of the linked resource.
	Href string `json:"href,omitempty"`

	// HTTP method of the linked resource.
	Method string `json:"method,omitempty"`

	// Label of the linked resource.
	Title string `json:"title,omitempty"`
}

// Validate validates this generate public key default body links next items0
func (o *GeneratePublicKeyDefaultBodyLinksNextItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GeneratePublicKeyDefaultBodyLinksNextItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GeneratePublicKeyDefaultBodyLinksNextItems0) UnmarshalBinary(b []byte) error {
	var res GeneratePublicKeyDefaultBodyLinksNextItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GeneratePublicKeyDefaultBodyLinksSelf generate public key default body links self
swagger:model GeneratePublicKeyDefaultBodyLinksSelf
*/
type GeneratePublicKeyDefaultBodyLinksSelf struct {

	// URI of the linked resource.
	Href string `json:"href,omitempty"`

	// HTTP method of the linked resource.
	Method string `json:"method,omitempty"`

	// Label of the linked resource.
	Title string `json:"title,omitempty"`
}

// Validate validates this generate public key default body links self
func (o *GeneratePublicKeyDefaultBodyLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GeneratePublicKeyDefaultBodyLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GeneratePublicKeyDefaultBodyLinksSelf) UnmarshalBinary(b []byte) error {
	var res GeneratePublicKeyDefaultBodyLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GeneratePublicKeyDefaultBodyResponseStatus generate public key default body response status
swagger:model GeneratePublicKeyDefaultBodyResponseStatus
*/
type GeneratePublicKeyDefaultBodyResponseStatus struct {

	// API correlation ID.
	CorrelationID string `json:"correlationId,omitempty"`

	// details
	Details []*GeneratePublicKeyDefaultBodyResponseStatusDetailsItems0 `json:"details"`

	// Error Message.
	Message string `json:"message,omitempty"`

	// Error Reason Code.
	Reason string `json:"reason,omitempty"`

	// HTTP Status code.
	Status float64 `json:"status,omitempty"`
}

// Validate validates this generate public key default body response status
func (o *GeneratePublicKeyDefaultBodyResponseStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GeneratePublicKeyDefaultBodyResponseStatus) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("generatePublicKey default" + "." + "responseStatus" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GeneratePublicKeyDefaultBodyResponseStatus) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GeneratePublicKeyDefaultBodyResponseStatus) UnmarshalBinary(b []byte) error {
	var res GeneratePublicKeyDefaultBodyResponseStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GeneratePublicKeyDefaultBodyResponseStatusDetailsItems0 generate public key default body response status details items0
swagger:model GeneratePublicKeyDefaultBodyResponseStatusDetailsItems0
*/
type GeneratePublicKeyDefaultBodyResponseStatusDetailsItems0 struct {

	// Field name referred to for validation issues.
	Location string `json:"location,omitempty"`

	// Description or code of any error response.
	Message string `json:"message,omitempty"`
}

// Validate validates this generate public key default body response status details items0
func (o *GeneratePublicKeyDefaultBodyResponseStatusDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GeneratePublicKeyDefaultBodyResponseStatusDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GeneratePublicKeyDefaultBodyResponseStatusDetailsItems0) UnmarshalBinary(b []byte) error {
	var res GeneratePublicKeyDefaultBodyResponseStatusDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GeneratePublicKeyOKBody flexV1KeysPost200Response
swagger:model GeneratePublicKeyOKBody
*/
type GeneratePublicKeyOKBody struct {

	// der
	Der *GeneratePublicKeyOKBodyDer `json:"der,omitempty"`

	// jwk
	Jwk *GeneratePublicKeyOKBodyJwk `json:"jwk,omitempty"`

	// Unique identifier for the generated token. Used in the subsequent Tokenize Card request from your customer’s device or browser.
	KeyID string `json:"keyId,omitempty"`
}

// Validate validates this generate public key o k body
func (o *GeneratePublicKeyOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDer(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateJwk(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GeneratePublicKeyOKBody) validateDer(formats strfmt.Registry) error {

	if swag.IsZero(o.Der) { // not required
		return nil
	}

	if o.Der != nil {
		if err := o.Der.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generatePublicKeyOK" + "." + "der")
			}
			return err
		}
	}

	return nil
}

func (o *GeneratePublicKeyOKBody) validateJwk(formats strfmt.Registry) error {

	if swag.IsZero(o.Jwk) { // not required
		return nil
	}

	if o.Jwk != nil {
		if err := o.Jwk.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generatePublicKeyOK" + "." + "jwk")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GeneratePublicKeyOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GeneratePublicKeyOKBody) UnmarshalBinary(b []byte) error {
	var res GeneratePublicKeyOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GeneratePublicKeyOKBodyDer The public key in DER format. Used to validate the response from the Tokenize Card request. Additionally this format is useful for client side encryption in Android and iOS implementations.
swagger:model GeneratePublicKeyOKBodyDer
*/
type GeneratePublicKeyOKBodyDer struct {

	// Algorithm used to encrypt the public key.
	Algorithm string `json:"algorithm,omitempty"`

	// Specifies the format of the public key; currently X.509.
	Format string `json:"format,omitempty"`

	// Base64 encoded public key value.
	PublicKey string `json:"publicKey,omitempty"`
}

// Validate validates this generate public key o k body der
func (o *GeneratePublicKeyOKBodyDer) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GeneratePublicKeyOKBodyDer) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GeneratePublicKeyOKBodyDer) UnmarshalBinary(b []byte) error {
	var res GeneratePublicKeyOKBodyDer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GeneratePublicKeyOKBodyJwk The public key in JSON Web Key (JWK) format. This format is useful for client side encryption in JavaScript based implementations.
swagger:model GeneratePublicKeyOKBodyJwk
*/
type GeneratePublicKeyOKBodyJwk struct {

	// JWK RSA Exponent
	E string `json:"e,omitempty"`

	// The key ID in JWK format.
	Kid string `json:"kid,omitempty"`

	// Algorithm used to encrypt the public key.
	Kty string `json:"kty,omitempty"`

	// JWK RSA Modulus
	N string `json:"n,omitempty"`

	// Defines whether to use the key for encryption (enc) or verifying a signature (sig). Always returned as enc.
	Use string `json:"use,omitempty"`
}

// Validate validates this generate public key o k body jwk
func (o *GeneratePublicKeyOKBodyJwk) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GeneratePublicKeyOKBodyJwk) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GeneratePublicKeyOKBodyJwk) UnmarshalBinary(b []byte) error {
	var res GeneratePublicKeyOKBodyJwk
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
