// Code generated by go-swagger; DO NOT EDIT.

package instrument_identifier

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteInstrumentIdentifierParams creates a new DeleteInstrumentIdentifierParams object
// with the default values initialized.
func NewDeleteInstrumentIdentifierParams() *DeleteInstrumentIdentifierParams {
	var ()
	return &DeleteInstrumentIdentifierParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteInstrumentIdentifierParamsWithTimeout creates a new DeleteInstrumentIdentifierParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteInstrumentIdentifierParamsWithTimeout(timeout time.Duration) *DeleteInstrumentIdentifierParams {
	var ()
	return &DeleteInstrumentIdentifierParams{

		timeout: timeout,
	}
}

// NewDeleteInstrumentIdentifierParamsWithContext creates a new DeleteInstrumentIdentifierParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteInstrumentIdentifierParamsWithContext(ctx context.Context) *DeleteInstrumentIdentifierParams {
	var ()
	return &DeleteInstrumentIdentifierParams{

		Context: ctx,
	}
}

// NewDeleteInstrumentIdentifierParamsWithHTTPClient creates a new DeleteInstrumentIdentifierParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteInstrumentIdentifierParamsWithHTTPClient(client *http.Client) *DeleteInstrumentIdentifierParams {
	var ()
	return &DeleteInstrumentIdentifierParams{
		HTTPClient: client,
	}
}

/*DeleteInstrumentIdentifierParams contains all the parameters to send to the API endpoint
for the delete instrument identifier operation typically these are written to a http.Request
*/
type DeleteInstrumentIdentifierParams struct {

	/*ProfileID
	  The id of a profile containing user specific TMS configuration.

	*/
	ProfileID string
	/*TokenID
	  The TokenId of an Instrument Identifier.

	*/
	TokenID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete instrument identifier params
func (o *DeleteInstrumentIdentifierParams) WithTimeout(timeout time.Duration) *DeleteInstrumentIdentifierParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete instrument identifier params
func (o *DeleteInstrumentIdentifierParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete instrument identifier params
func (o *DeleteInstrumentIdentifierParams) WithContext(ctx context.Context) *DeleteInstrumentIdentifierParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete instrument identifier params
func (o *DeleteInstrumentIdentifierParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete instrument identifier params
func (o *DeleteInstrumentIdentifierParams) WithHTTPClient(client *http.Client) *DeleteInstrumentIdentifierParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete instrument identifier params
func (o *DeleteInstrumentIdentifierParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProfileID adds the profileID to the delete instrument identifier params
func (o *DeleteInstrumentIdentifierParams) WithProfileID(profileID string) *DeleteInstrumentIdentifierParams {
	o.SetProfileID(profileID)
	return o
}

// SetProfileID adds the profileId to the delete instrument identifier params
func (o *DeleteInstrumentIdentifierParams) SetProfileID(profileID string) {
	o.ProfileID = profileID
}

// WithTokenID adds the tokenID to the delete instrument identifier params
func (o *DeleteInstrumentIdentifierParams) WithTokenID(tokenID string) *DeleteInstrumentIdentifierParams {
	o.SetTokenID(tokenID)
	return o
}

// SetTokenID adds the tokenId to the delete instrument identifier params
func (o *DeleteInstrumentIdentifierParams) SetTokenID(tokenID string) {
	o.TokenID = tokenID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteInstrumentIdentifierParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param profile-id
	if err := r.SetHeaderParam("profile-id", o.ProfileID); err != nil {
		return err
	}

	// path param tokenId
	if err := r.SetPathParam("tokenId", o.TokenID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
