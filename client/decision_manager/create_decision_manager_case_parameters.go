// Code generated by go-swagger; DO NOT EDIT.

package decision_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCreateDecisionManagerCaseParams creates a new CreateDecisionManagerCaseParams object
// with the default values initialized.
func NewCreateDecisionManagerCaseParams() *CreateDecisionManagerCaseParams {
	var ()
	return &CreateDecisionManagerCaseParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateDecisionManagerCaseParamsWithTimeout creates a new CreateDecisionManagerCaseParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateDecisionManagerCaseParamsWithTimeout(timeout time.Duration) *CreateDecisionManagerCaseParams {
	var ()
	return &CreateDecisionManagerCaseParams{

		timeout: timeout,
	}
}

// NewCreateDecisionManagerCaseParamsWithContext creates a new CreateDecisionManagerCaseParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateDecisionManagerCaseParamsWithContext(ctx context.Context) *CreateDecisionManagerCaseParams {
	var ()
	return &CreateDecisionManagerCaseParams{

		Context: ctx,
	}
}

// NewCreateDecisionManagerCaseParamsWithHTTPClient creates a new CreateDecisionManagerCaseParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateDecisionManagerCaseParamsWithHTTPClient(client *http.Client) *CreateDecisionManagerCaseParams {
	var ()
	return &CreateDecisionManagerCaseParams{
		HTTPClient: client,
	}
}

/*CreateDecisionManagerCaseParams contains all the parameters to send to the API endpoint
for the create decision manager case operation typically these are written to a http.Request
*/
type CreateDecisionManagerCaseParams struct {

	/*CreateDecisionManagerCaseRequest*/
	CreateDecisionManagerCaseRequest CreateDecisionManagerCaseBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create decision manager case params
func (o *CreateDecisionManagerCaseParams) WithTimeout(timeout time.Duration) *CreateDecisionManagerCaseParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create decision manager case params
func (o *CreateDecisionManagerCaseParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create decision manager case params
func (o *CreateDecisionManagerCaseParams) WithContext(ctx context.Context) *CreateDecisionManagerCaseParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create decision manager case params
func (o *CreateDecisionManagerCaseParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create decision manager case params
func (o *CreateDecisionManagerCaseParams) WithHTTPClient(client *http.Client) *CreateDecisionManagerCaseParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create decision manager case params
func (o *CreateDecisionManagerCaseParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreateDecisionManagerCaseRequest adds the createDecisionManagerCaseRequest to the create decision manager case params
func (o *CreateDecisionManagerCaseParams) WithCreateDecisionManagerCaseRequest(createDecisionManagerCaseRequest CreateDecisionManagerCaseBody) *CreateDecisionManagerCaseParams {
	o.SetCreateDecisionManagerCaseRequest(createDecisionManagerCaseRequest)
	return o
}

// SetCreateDecisionManagerCaseRequest adds the createDecisionManagerCaseRequest to the create decision manager case params
func (o *CreateDecisionManagerCaseParams) SetCreateDecisionManagerCaseRequest(createDecisionManagerCaseRequest CreateDecisionManagerCaseBody) {
	o.CreateDecisionManagerCaseRequest = createDecisionManagerCaseRequest
}

// WriteToRequest writes these params to a swagger request
func (o *CreateDecisionManagerCaseParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.CreateDecisionManagerCaseRequest); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
