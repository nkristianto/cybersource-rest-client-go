// Code generated by go-swagger; DO NOT EDIT.

package decision_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new decision manager API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for decision manager API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateDecisionManagerCase(params *CreateDecisionManagerCaseParams) (*CreateDecisionManagerCaseCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateDecisionManagerCase creates decision manager case

  This is the combined request to the Decision Manager Service for a transaction sent to Cybersource.
Decision Manager will return a decision based on the request values.

*/
func (a *Client) CreateDecisionManagerCase(params *CreateDecisionManagerCaseParams) (*CreateDecisionManagerCaseCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateDecisionManagerCaseParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createDecisionManagerCase",
		Method:             "POST",
		PathPattern:        "/risk/v1/decisions",
		ProducesMediaTypes: []string{"application/hal+json;charset=utf-8"},
		ConsumesMediaTypes: []string{"application/json;charset=utf-8"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateDecisionManagerCaseReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateDecisionManagerCaseCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createDecisionManagerCase: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
