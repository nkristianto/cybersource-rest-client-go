// Code generated by go-swagger; DO NOT EDIT.

package decision_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateDecisionManagerCaseReader is a Reader for the CreateDecisionManagerCase structure.
type CreateDecisionManagerCaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDecisionManagerCaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateDecisionManagerCaseCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateDecisionManagerCaseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewCreateDecisionManagerCaseBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateDecisionManagerCaseCreated creates a CreateDecisionManagerCaseCreated with default headers values
func NewCreateDecisionManagerCaseCreated() *CreateDecisionManagerCaseCreated {
	return &CreateDecisionManagerCaseCreated{}
}

/*CreateDecisionManagerCaseCreated handles this case with default header values.

Successful response
*/
type CreateDecisionManagerCaseCreated struct {
	Payload *CreateDecisionManagerCaseCreatedBody
}

func (o *CreateDecisionManagerCaseCreated) Error() string {
	return fmt.Sprintf("[POST /risk/v1/decisions][%d] createDecisionManagerCaseCreated  %+v", 201, o.Payload)
}

func (o *CreateDecisionManagerCaseCreated) GetPayload() *CreateDecisionManagerCaseCreatedBody {
	return o.Payload
}

func (o *CreateDecisionManagerCaseCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateDecisionManagerCaseCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDecisionManagerCaseBadRequest creates a CreateDecisionManagerCaseBadRequest with default headers values
func NewCreateDecisionManagerCaseBadRequest() *CreateDecisionManagerCaseBadRequest {
	return &CreateDecisionManagerCaseBadRequest{}
}

/*CreateDecisionManagerCaseBadRequest handles this case with default header values.

Invalid request
*/
type CreateDecisionManagerCaseBadRequest struct {
	Payload *CreateDecisionManagerCaseBadRequestBody
}

func (o *CreateDecisionManagerCaseBadRequest) Error() string {
	return fmt.Sprintf("[POST /risk/v1/decisions][%d] createDecisionManagerCaseBadRequest  %+v", 400, o.Payload)
}

func (o *CreateDecisionManagerCaseBadRequest) GetPayload() *CreateDecisionManagerCaseBadRequestBody {
	return o.Payload
}

func (o *CreateDecisionManagerCaseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateDecisionManagerCaseBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDecisionManagerCaseBadGateway creates a CreateDecisionManagerCaseBadGateway with default headers values
func NewCreateDecisionManagerCaseBadGateway() *CreateDecisionManagerCaseBadGateway {
	return &CreateDecisionManagerCaseBadGateway{}
}

/*CreateDecisionManagerCaseBadGateway handles this case with default header values.

Unexpected system error or system timeout.
*/
type CreateDecisionManagerCaseBadGateway struct {
	Payload *CreateDecisionManagerCaseBadGatewayBody
}

func (o *CreateDecisionManagerCaseBadGateway) Error() string {
	return fmt.Sprintf("[POST /risk/v1/decisions][%d] createDecisionManagerCaseBadGateway  %+v", 502, o.Payload)
}

func (o *CreateDecisionManagerCaseBadGateway) GetPayload() *CreateDecisionManagerCaseBadGatewayBody {
	return o.Payload
}

func (o *CreateDecisionManagerCaseBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateDecisionManagerCaseBadGatewayBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CreateDecisionManagerCaseBadGatewayBody riskV1DecisionsPost502Response
swagger:model CreateDecisionManagerCaseBadGatewayBody
*/
type CreateDecisionManagerCaseBadGatewayBody struct {

	// The detail message related to the status and reason listed above.
	Message string `json:"message,omitempty"`

	// The reason of the status.
	//
	// Possible values:
	//  - SYSTEM_ERROR
	//  - SERVER_TIMEOUT
	//  - SERVICE_TIMEOUT
	//  - INVALID_OR_MISSING_CONFIG
	//
	Reason string `json:"reason,omitempty"`

	// The status of the submitted transaction.
	//
	// Possible values:
	//  - SERVER_ERROR
	//
	Status string `json:"status,omitempty"`

	// Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`
	// Example `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the
	// time. The `Z` indicates UTC.
	//
	SubmitTimeUtc string `json:"submitTimeUtc,omitempty"`
}

// Validate validates this create decision manager case bad gateway body
func (o *CreateDecisionManagerCaseBadGatewayBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseBadGatewayBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseBadGatewayBody) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseBadGatewayBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseBadRequestBody riskV1DecisionsPost400Response
swagger:model CreateDecisionManagerCaseBadRequestBody
*/
type CreateDecisionManagerCaseBadRequestBody struct {

	// details
	Details []*DetailsItems0 `json:"details"`

	// The detail message related to the status and reason listed above.
	Message string `json:"message,omitempty"`

	// The reason of the status.
	//
	// Possible values:
	//  - MISSING_FIELD
	//  - INVALID_DATA
	//  - DUPLICATE_REQUEST
	//  - INVALID_MERCHANT_CONFIGURATION
	//  - PROCESSOR_UNAVAILABLE
	//
	Reason string `json:"reason,omitempty"`

	// The status of the submitted transaction.
	//
	// Possible values:
	//  - INVALID_REQUEST
	//
	Status string `json:"status,omitempty"`

	// Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`
	// Example `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the
	// time. The `Z` indicates UTC.
	//
	SubmitTimeUtc string `json:"submitTimeUtc,omitempty"`
}

// Validate validates this create decision manager case bad request body
func (o *CreateDecisionManagerCaseBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseBadRequestBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("createDecisionManagerCaseBadRequest" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseBadRequestBody) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseBody create decision manager case body
swagger:model CreateDecisionManagerCaseBody
*/
type CreateDecisionManagerCaseBody struct {

	// buyer information
	BuyerInformation *CreateDecisionManagerCaseParamsBodyBuyerInformation `json:"buyerInformation,omitempty"`

	// card verification
	CardVerification *CreateDecisionManagerCaseParamsBodyCardVerification `json:"cardVerification,omitempty"`

	// client reference information
	// Required: true
	ClientReferenceInformation *CreateDecisionManagerCaseParamsBodyClientReferenceInformation `json:"clientReferenceInformation"`

	// device information
	DeviceInformation *CreateDecisionManagerCaseParamsBodyDeviceInformation `json:"deviceInformation,omitempty"`

	// merchant defined information
	MerchantDefinedInformation []*MerchantDefinedInformationItems0 `json:"merchantDefinedInformation"`

	// order information
	// Required: true
	OrderInformation *CreateDecisionManagerCaseParamsBodyOrderInformation `json:"orderInformation"`

	// payment information
	PaymentInformation *CreateDecisionManagerCaseParamsBodyPaymentInformation `json:"paymentInformation,omitempty"`

	// processor information
	ProcessorInformation *CreateDecisionManagerCaseParamsBodyProcessorInformation `json:"processorInformation,omitempty"`

	// risk information
	RiskInformation *CreateDecisionManagerCaseParamsBodyRiskInformation `json:"riskInformation,omitempty"`

	// travel information
	TravelInformation *CreateDecisionManagerCaseParamsBodyTravelInformation `json:"travelInformation,omitempty"`
}

// Validate validates this create decision manager case body
func (o *CreateDecisionManagerCaseBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBuyerInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCardVerification(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateClientReferenceInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDeviceInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMerchantDefinedInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOrderInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePaymentInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProcessorInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRiskInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTravelInformation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseBody) validateBuyerInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.BuyerInformation) { // not required
		return nil
	}

	if o.BuyerInformation != nil {
		if err := o.BuyerInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "buyerInformation")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseBody) validateCardVerification(formats strfmt.Registry) error {

	if swag.IsZero(o.CardVerification) { // not required
		return nil
	}

	if o.CardVerification != nil {
		if err := o.CardVerification.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "cardVerification")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseBody) validateClientReferenceInformation(formats strfmt.Registry) error {

	if err := validate.Required("createDecisionManagerCaseRequest"+"."+"clientReferenceInformation", "body", o.ClientReferenceInformation); err != nil {
		return err
	}

	if o.ClientReferenceInformation != nil {
		if err := o.ClientReferenceInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "clientReferenceInformation")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseBody) validateDeviceInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.DeviceInformation) { // not required
		return nil
	}

	if o.DeviceInformation != nil {
		if err := o.DeviceInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "deviceInformation")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseBody) validateMerchantDefinedInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.MerchantDefinedInformation) { // not required
		return nil
	}

	for i := 0; i < len(o.MerchantDefinedInformation); i++ {
		if swag.IsZero(o.MerchantDefinedInformation[i]) { // not required
			continue
		}

		if o.MerchantDefinedInformation[i] != nil {
			if err := o.MerchantDefinedInformation[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "merchantDefinedInformation" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *CreateDecisionManagerCaseBody) validateOrderInformation(formats strfmt.Registry) error {

	if err := validate.Required("createDecisionManagerCaseRequest"+"."+"orderInformation", "body", o.OrderInformation); err != nil {
		return err
	}

	if o.OrderInformation != nil {
		if err := o.OrderInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "orderInformation")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseBody) validatePaymentInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.PaymentInformation) { // not required
		return nil
	}

	if o.PaymentInformation != nil {
		if err := o.PaymentInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "paymentInformation")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseBody) validateProcessorInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.ProcessorInformation) { // not required
		return nil
	}

	if o.ProcessorInformation != nil {
		if err := o.ProcessorInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "processorInformation")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseBody) validateRiskInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.RiskInformation) { // not required
		return nil
	}

	if o.RiskInformation != nil {
		if err := o.RiskInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "riskInformation")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseBody) validateTravelInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.TravelInformation) { // not required
		return nil
	}

	if o.TravelInformation != nil {
		if err := o.TravelInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "travelInformation")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseBody) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBody riskV1DecisionsPost201Response
swagger:model CreateDecisionManagerCaseCreatedBody
*/
type CreateDecisionManagerCaseCreatedBody struct {

	// links
	Links *CreateDecisionManagerCaseCreatedBodyLinks `json:"_links,omitempty"`

	// error information
	ErrorInformation *CreateDecisionManagerCaseCreatedBodyErrorInformation `json:"errorInformation,omitempty"`

	// An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource.
	// Max Length: 26
	ID string `json:"id,omitempty"`

	// payment information
	PaymentInformation *CreateDecisionManagerCaseCreatedBodyPaymentInformation `json:"paymentInformation,omitempty"`

	// risk information
	RiskInformation *CreateDecisionManagerCaseCreatedBodyRiskInformation `json:"riskInformation,omitempty"`

	// The status of the submitted transaction.
	//
	// Possible values:
	//   - `ACCEPTED`
	//   - `REJECTED`
	//   - `PENDING_REVIEW`
	//
	Status string `json:"status,omitempty"`

	// Time that the transaction was submitted in local time.
	SubmitTimeLocal string `json:"submitTimeLocal,omitempty"`

	// Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`
	// Example `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the
	// time. The `Z` indicates UTC.
	//
	SubmitTimeUtc string `json:"submitTimeUtc,omitempty"`
}

// Validate validates this create decision manager case created body
func (o *CreateDecisionManagerCaseCreatedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateErrorInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePaymentInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRiskInformation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBody) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBody) validateErrorInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.ErrorInformation) { // not required
		return nil
	}

	if o.ErrorInformation != nil {
		if err := o.ErrorInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "errorInformation")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBody) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"id", "body", string(o.ID), 26); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBody) validatePaymentInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.PaymentInformation) { // not required
		return nil
	}

	if o.PaymentInformation != nil {
		if err := o.PaymentInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "paymentInformation")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBody) validateRiskInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.RiskInformation) { // not required
		return nil
	}

	if o.RiskInformation != nil {
		if err := o.RiskInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "riskInformation")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBody) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyErrorInformation create decision manager case created body error information
swagger:model CreateDecisionManagerCaseCreatedBodyErrorInformation
*/
type CreateDecisionManagerCaseCreatedBodyErrorInformation struct {

	// details
	Details []*CreateDecisionManagerCaseCreatedBodyErrorInformationDetailsItems0 `json:"details"`

	// The detail message related to the status and reason listed above.
	Message string `json:"message,omitempty"`

	// The reason of the status.
	//
	// Possible values:
	//  - AVS_FAILED
	//  - CONTACT_PROCESSOR
	//  - EXPIRED_CARD
	//  - PROCESSOR_DECLINED
	//  - INSUFFICIENT_FUND
	//  - STOLEN_LOST_CARD
	//  - ISSUER_UNAVAILABLE
	//  - UNAUTHORIZED_CARD
	//  - CVN_NOT_MATCH
	//  - EXCEEDS_CREDIT_LIMIT
	//  - INVALID_CVN
	//  - DECLINED_CHECK
	//  - BLACKLISTED_CUSTOMER
	//  - SUSPENDED_ACCOUNT
	//  - PAYMENT_REFUSED
	//  - CV_FAILED
	//  - INVALID_ACCOUNT
	//  - GENERAL_DECLINE
	//  - INVALID_MERCHANT_CONFIGURATION
	//  - DECISION_PROFILE_REJECT
	//  - SCORE_EXCEEDS_THRESHOLD
	//  - PENDING_AUTHENTICATION
	//
	Reason string `json:"reason,omitempty"`
}

// Validate validates this create decision manager case created body error information
func (o *CreateDecisionManagerCaseCreatedBodyErrorInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyErrorInformation) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "errorInformation" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyErrorInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyErrorInformation) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyErrorInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyErrorInformationDetailsItems0 create decision manager case created body error information details items0
swagger:model CreateDecisionManagerCaseCreatedBodyErrorInformationDetailsItems0
*/
type CreateDecisionManagerCaseCreatedBodyErrorInformationDetailsItems0 struct {

	// This is the flattened JSON object field name/path that is either missing or invalid.
	Field string `json:"field,omitempty"`

	// Possible reasons for the error.
	//
	// Possible values:
	//  - MISSING_FIELD
	//  - INVALID_DATA
	//
	Reason string `json:"reason,omitempty"`
}

// Validate validates this create decision manager case created body error information details items0
func (o *CreateDecisionManagerCaseCreatedBodyErrorInformationDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyErrorInformationDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyErrorInformationDetailsItems0) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyErrorInformationDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyLinks create decision manager case created body links
swagger:model CreateDecisionManagerCaseCreatedBodyLinks
*/
type CreateDecisionManagerCaseCreatedBodyLinks struct {

	// capture
	Capture *CreateDecisionManagerCaseCreatedBodyLinksCapture `json:"capture,omitempty"`

	// reversal
	Reversal *CreateDecisionManagerCaseCreatedBodyLinksReversal `json:"reversal,omitempty"`

	// self
	Self *CreateDecisionManagerCaseCreatedBodyLinksSelf `json:"self,omitempty"`
}

// Validate validates this create decision manager case created body links
func (o *CreateDecisionManagerCaseCreatedBodyLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCapture(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateReversal(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyLinks) validateCapture(formats strfmt.Registry) error {

	if swag.IsZero(o.Capture) { // not required
		return nil
	}

	if o.Capture != nil {
		if err := o.Capture.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "_links" + "." + "capture")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyLinks) validateReversal(formats strfmt.Registry) error {

	if swag.IsZero(o.Reversal) { // not required
		return nil
	}

	if o.Reversal != nil {
		if err := o.Reversal.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "_links" + "." + "reversal")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyLinks) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyLinks) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyLinksCapture create decision manager case created body links capture
swagger:model CreateDecisionManagerCaseCreatedBodyLinksCapture
*/
type CreateDecisionManagerCaseCreatedBodyLinksCapture struct {

	// This is the endpoint of the resource that was created by the successful request.
	Href string `json:"href,omitempty"`

	// `method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource.
	Method string `json:"method,omitempty"`
}

// Validate validates this create decision manager case created body links capture
func (o *CreateDecisionManagerCaseCreatedBodyLinksCapture) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyLinksCapture) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyLinksCapture) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyLinksCapture
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyLinksReversal create decision manager case created body links reversal
swagger:model CreateDecisionManagerCaseCreatedBodyLinksReversal
*/
type CreateDecisionManagerCaseCreatedBodyLinksReversal struct {

	// This is the endpoint of the resource that was created by the successful request.
	Href string `json:"href,omitempty"`

	// `method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource.
	Method string `json:"method,omitempty"`
}

// Validate validates this create decision manager case created body links reversal
func (o *CreateDecisionManagerCaseCreatedBodyLinksReversal) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyLinksReversal) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyLinksReversal) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyLinksReversal
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyLinksSelf create decision manager case created body links self
swagger:model CreateDecisionManagerCaseCreatedBodyLinksSelf
*/
type CreateDecisionManagerCaseCreatedBodyLinksSelf struct {

	// This is the endpoint of the resource that was created by the successful request.
	Href string `json:"href,omitempty"`

	// `method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource.
	Method string `json:"method,omitempty"`
}

// Validate validates this create decision manager case created body links self
func (o *CreateDecisionManagerCaseCreatedBodyLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyLinksSelf) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyPaymentInformation Contains response information about the payment.
swagger:model CreateDecisionManagerCaseCreatedBodyPaymentInformation
*/
type CreateDecisionManagerCaseCreatedBodyPaymentInformation struct {

	// Type of payment card account. This field can refer to a credit card, debit card, or prepaid card
	// account type.
	//
	// For all possible values, see the `score_card_account_type` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 255
	AccountType string `json:"accountType,omitempty"`

	// Credit card BIN (the first six digits of the credit card).Derived either from the `cc_bin` request field
	// or from the first six characters of the `customer_cc_num` field.
	//
	// For all possible values, see the `score_cc_bin` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 255
	Bin string `json:"bin,omitempty"`

	// Country (two-digit country code) associated with the BIN of the customer’s card used for the payment.
	// Returned if the information is available. Use this field for additional information when reviewing orders.
	// This information is also displayed in the details page of the CyberSource Business Center.
	//
	// For all possible values, see the `bin_country` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 255
	BinCountry string `json:"binCountry,omitempty"`

	// Name of the bank or entity that issued the card account.
	//
	// For all possible values, see the `score_card_issuer` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 255
	Issuer string `json:"issuer,omitempty"`

	// Subtype of card account. This field can contain one of the following values:
	// - Maestro International
	// - Maestro UK Domestic
	// - MasterCard Credit
	// - MasterCard Debit
	// - Visa Credit
	// - Visa Debit
	// - Visa Electron
	//
	// **Note** Additional values may be present.
	//
	// For all possible values, see the `score_card_scheme` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 255
	Scheme string `json:"scheme,omitempty"`
}

// Validate validates this create decision manager case created body payment information
func (o *CreateDecisionManagerCaseCreatedBodyPaymentInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAccountType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBin(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBinCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIssuer(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateScheme(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyPaymentInformation) validateAccountType(formats strfmt.Registry) error {

	if swag.IsZero(o.AccountType) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"paymentInformation"+"."+"accountType", "body", string(o.AccountType), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyPaymentInformation) validateBin(formats strfmt.Registry) error {

	if swag.IsZero(o.Bin) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"paymentInformation"+"."+"bin", "body", string(o.Bin), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyPaymentInformation) validateBinCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.BinCountry) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"paymentInformation"+"."+"binCountry", "body", string(o.BinCountry), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyPaymentInformation) validateIssuer(formats strfmt.Registry) error {

	if swag.IsZero(o.Issuer) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"paymentInformation"+"."+"issuer", "body", string(o.Issuer), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyPaymentInformation) validateScheme(formats strfmt.Registry) error {

	if swag.IsZero(o.Scheme) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"paymentInformation"+"."+"scheme", "body", string(o.Scheme), 255); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyPaymentInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyPaymentInformation) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyPaymentInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyRiskInformation Contains the result of risk assessment.
swagger:model CreateDecisionManagerCaseCreatedBodyRiskInformation
*/
type CreateDecisionManagerCaseCreatedBodyRiskInformation struct {

	// You receive this field only if you subscribe to the Enhanced Case Management service. The priority level ranges from 1 (highest) to 5 (lowest); the default value is 3. If you do not assign a priority to your rules or to your profiles, the default value is given to the order.
	//
	// For all possible values, see the `decision_case_priority` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 1
	CasePriority int64 `json:"casePriority,omitempty"`

	// info codes
	InfoCodes *CreateDecisionManagerCaseCreatedBodyRiskInformationInfoCodes `json:"infoCodes,omitempty"`

	// ip address
	IPAddress *CreateDecisionManagerCaseCreatedBodyRiskInformationIPAddress `json:"ipAddress,omitempty"`

	// The customer's local time (`hh:mm:ss`), which is calculated from the transaction request time and the
	// customer's billing address.
	//
	// For details, see the `score_time_local` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/)
	//
	// Max Length: 255
	LocalTime string `json:"localTime,omitempty"`

	// profile
	Profile *CreateDecisionManagerCaseCreatedBodyRiskInformationProfile `json:"profile,omitempty"`

	// providers
	Providers *CreateDecisionManagerCaseCreatedBodyRiskInformationProviders `json:"providers,omitempty"`

	// rules
	Rules []*CreateDecisionManagerCaseCreatedBodyRiskInformationRulesItems0 `json:"rules"`

	// score
	Score *CreateDecisionManagerCaseCreatedBodyRiskInformationScore `json:"score,omitempty"`

	// travel
	Travel *CreateDecisionManagerCaseCreatedBodyRiskInformationTravel `json:"travel,omitempty"`

	// velocity
	Velocity *CreateDecisionManagerCaseCreatedBodyRiskInformationVelocity `json:"velocity,omitempty"`
}

// Validate validates this create decision manager case created body risk information
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCasePriority(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateInfoCodes(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIPAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocalTime(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProfile(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProviders(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRules(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateScore(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTravel(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVelocity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformation) validateCasePriority(formats strfmt.Registry) error {

	if swag.IsZero(o.CasePriority) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"casePriority", "body", string(o.CasePriority), 1); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformation) validateInfoCodes(formats strfmt.Registry) error {

	if swag.IsZero(o.InfoCodes) { // not required
		return nil
	}

	if o.InfoCodes != nil {
		if err := o.InfoCodes.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "riskInformation" + "." + "infoCodes")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformation) validateIPAddress(formats strfmt.Registry) error {

	if swag.IsZero(o.IPAddress) { // not required
		return nil
	}

	if o.IPAddress != nil {
		if err := o.IPAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "riskInformation" + "." + "ipAddress")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformation) validateLocalTime(formats strfmt.Registry) error {

	if swag.IsZero(o.LocalTime) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"localTime", "body", string(o.LocalTime), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformation) validateProfile(formats strfmt.Registry) error {

	if swag.IsZero(o.Profile) { // not required
		return nil
	}

	if o.Profile != nil {
		if err := o.Profile.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "riskInformation" + "." + "profile")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformation) validateProviders(formats strfmt.Registry) error {

	if swag.IsZero(o.Providers) { // not required
		return nil
	}

	if o.Providers != nil {
		if err := o.Providers.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "riskInformation" + "." + "providers")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformation) validateRules(formats strfmt.Registry) error {

	if swag.IsZero(o.Rules) { // not required
		return nil
	}

	for i := 0; i < len(o.Rules); i++ {
		if swag.IsZero(o.Rules[i]) { // not required
			continue
		}

		if o.Rules[i] != nil {
			if err := o.Rules[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "riskInformation" + "." + "rules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformation) validateScore(formats strfmt.Registry) error {

	if swag.IsZero(o.Score) { // not required
		return nil
	}

	if o.Score != nil {
		if err := o.Score.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "riskInformation" + "." + "score")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformation) validateTravel(formats strfmt.Registry) error {

	if swag.IsZero(o.Travel) { // not required
		return nil
	}

	if o.Travel != nil {
		if err := o.Travel.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "riskInformation" + "." + "travel")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformation) validateVelocity(formats strfmt.Registry) error {

	if swag.IsZero(o.Velocity) { // not required
		return nil
	}

	if o.Velocity != nil {
		if err := o.Velocity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "riskInformation" + "." + "velocity")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformation) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyRiskInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyRiskInformationIPAddress Contains detailed response information about the customer's IP address.
swagger:model CreateDecisionManagerCaseCreatedBodyRiskInformationIPAddress
*/
type CreateDecisionManagerCaseCreatedBodyRiskInformationIPAddress struct {

	// Name of the state decoded from the IP address used directly or indirectly by the customer to send the order.
	//
	// For all possible values, see the `score_ip_state` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 255
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Indicates whether the transaction IP address is associated with a known anonymous proxy.
	//
	// For all possible values, see the `score_ip_anonymizer_status` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 255
	AnonymizerStatus string `json:"anonymizerStatus,omitempty"`

	// Name of the country decoded from the IP address used directly or indirectly by the customer to send the order.
	//
	// For all possible values, see the `score_ip_country` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 255
	Country string `json:"country,omitempty"`

	// Name of the city decoded from the IP address used directly or indirectly by the customer to send the order.
	//
	// For all possible values, see the `score_ip_city` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 255
	Locality string `json:"locality,omitempty"`

	// Routing method decoded from the IP address used directly or indirectly by the customer to send the order.
	//
	// For all possible values, see the `score_ip_routing_method` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 255
	RoutingMethod string `json:"routingMethod,omitempty"`
}

// Validate validates this create decision manager case created body risk information IP address
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationIPAddress) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAnonymizerStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRoutingMethod(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationIPAddress) validateAdministrativeArea(formats strfmt.Registry) error {

	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"ipAddress"+"."+"administrativeArea", "body", string(o.AdministrativeArea), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationIPAddress) validateAnonymizerStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.AnonymizerStatus) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"ipAddress"+"."+"anonymizerStatus", "body", string(o.AnonymizerStatus), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationIPAddress) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"ipAddress"+"."+"country", "body", string(o.Country), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationIPAddress) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"ipAddress"+"."+"locality", "body", string(o.Locality), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationIPAddress) validateRoutingMethod(formats strfmt.Registry) error {

	if swag.IsZero(o.RoutingMethod) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"ipAddress"+"."+"routingMethod", "body", string(o.RoutingMethod), 255); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationIPAddress) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationIPAddress) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyRiskInformationIPAddress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyRiskInformationInfoCodes create decision manager case created body risk information info codes
swagger:model CreateDecisionManagerCaseCreatedBodyRiskInformationInfoCodes
*/
type CreateDecisionManagerCaseCreatedBodyRiskInformationInfoCodes struct {

	// Indicates a mismatch between the customer’s billing and shipping addresses.
	//
	// For all possible values, see the `score_address_info` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	Address []string `json:"address"`

	// Indicates that customer information is associated with transactions that are either on the negative or
	// the positive list.
	//
	// For all possible values, see the `score_hotlist_info` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	CustomerList []string `json:"customerList"`

	// Indicates that the customer has a high purchase frequency.
	//
	// For all possible values, see the `score_velocity_info` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	GlobalVelocity []string `json:"globalVelocity"`

	// Indicates excessive identity changes. The threshold is variable depending on the identity elements being
	// compared. This field can contain one or more information codes, separated by carets (^).
	//
	// For all possible values, see the `score_identity_info` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	IdentityChange []string `json:"identityChange"`

	// Indicates a problem with the customer’s email address, IP address, or billing address.
	//
	// For all possible values, see the `score_internet_info` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	Internet []string `json:"internet"`

	// Indicates a problem with the customer’s phone number.
	//
	// For all possible values, see the `score_phone_info` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	Phone []string `json:"phone"`

	// Indicates that the customer provided potentially suspicious information.
	//
	// For all possible values, see the `score_suspicious_info` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	Suspicious []string `json:"suspicious"`

	// List of information codes triggered by the order. These information codes were generated when you created
	// the order and product velocity rules and are returned so that you can associate them with the rules.
	//
	// For all possible values, see the `decision_velocity_info` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	Velocity []string `json:"velocity"`
}

// Validate validates this create decision manager case created body risk information info codes
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationInfoCodes) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationInfoCodes) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationInfoCodes) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyRiskInformationInfoCodes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyRiskInformationProfile create decision manager case created body risk information profile
swagger:model CreateDecisionManagerCaseCreatedBodyRiskInformationProfile
*/
type CreateDecisionManagerCaseCreatedBodyRiskInformationProfile struct {

	// Name of the queue where orders that are not automatically accepted are sent.
	//
	// Max Length: 255
	DesinationQueue string `json:"desinationQueue,omitempty"`

	// Name of the active profile chosen by the profile selector. If no profile selector exists,
	// the default active profile is chosen.
	//
	// **Note** By default, your default profile is the active profile, or the Profile Selector chooses the active profile. Use this field
	// only if you want to specify the name of a different profile. The passed-in profile will then become the active profile.
	//
	// Max Length: 30
	Name string `json:"name,omitempty"`

	// Name of the profile selector rule that chooses the profile to use for the
	// transaction. If no profile selector exists, the value is Default Active Profile.
	//
	// Max Length: 255
	SelectorRule string `json:"selectorRule,omitempty"`
}

// Validate validates this create decision manager case created body risk information profile
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationProfile) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDesinationQueue(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelectorRule(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationProfile) validateDesinationQueue(formats strfmt.Registry) error {

	if swag.IsZero(o.DesinationQueue) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"profile"+"."+"desinationQueue", "body", string(o.DesinationQueue), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationProfile) validateName(formats strfmt.Registry) error {

	if swag.IsZero(o.Name) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"profile"+"."+"name", "body", string(o.Name), 30); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationProfile) validateSelectorRule(formats strfmt.Registry) error {

	if swag.IsZero(o.SelectorRule) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"profile"+"."+"selectorRule", "body", string(o.SelectorRule), 255); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationProfile) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationProfile) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyRiskInformationProfile
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyRiskInformationProviders create decision manager case created body risk information providers
swagger:model CreateDecisionManagerCaseCreatedBodyRiskInformationProviders
*/
type CreateDecisionManagerCaseCreatedBodyRiskInformationProviders struct {

	// provider name
	ProviderName []*CreateDecisionManagerCaseCreatedBodyRiskInformationProvidersProviderNameItems0 `json:"providerName"`
}

// Validate validates this create decision manager case created body risk information providers
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationProviders) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateProviderName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationProviders) validateProviderName(formats strfmt.Registry) error {

	if swag.IsZero(o.ProviderName) { // not required
		return nil
	}

	for i := 0; i < len(o.ProviderName); i++ {
		if swag.IsZero(o.ProviderName[i]) { // not required
			continue
		}

		if o.ProviderName[i] != nil {
			if err := o.ProviderName[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "riskInformation" + "." + "providers" + "." + "providerName" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationProviders) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationProviders) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyRiskInformationProviders
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyRiskInformationProvidersProviderNameItems0 Name of the 3rd party provider, for example, Emailage.
//
// For all possible values, see the `decision_provider_#_name` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
//
swagger:model CreateDecisionManagerCaseCreatedBodyRiskInformationProvidersProviderNameItems0
*/
type CreateDecisionManagerCaseCreatedBodyRiskInformationProvidersProviderNameItems0 struct {

	// field name
	FieldName []string `json:"fieldName"`

	// field value
	FieldValue []string `json:"fieldValue"`
}

// Validate validates this create decision manager case created body risk information providers provider name items0
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationProvidersProviderNameItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationProvidersProviderNameItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationProvidersProviderNameItems0) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyRiskInformationProvidersProviderNameItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyRiskInformationRulesItems0 create decision manager case created body risk information rules items0
swagger:model CreateDecisionManagerCaseCreatedBodyRiskInformationRulesItems0
*/
type CreateDecisionManagerCaseCreatedBodyRiskInformationRulesItems0 struct {

	// Summarizes the result for the rule according to the setting that you chose in the Profile Editor.
	// This field can contain one of the following values:
	// - `IGNORE`
	// - `REVIEW`
	// - `REJECT`
	// - `ACCEPT`
	//
	// Max Length: 255
	Decision string `json:"decision,omitempty"`

	// Description of the rule as it appears in the Profile Editor.
	// Max Length: 255
	Name string `json:"name,omitempty"`
}

// Validate validates this create decision manager case created body risk information rules items0
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationRulesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDecision(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationRulesItems0) validateDecision(formats strfmt.Registry) error {

	if swag.IsZero(o.Decision) { // not required
		return nil
	}

	if err := validate.MaxLength("decision", "body", string(o.Decision), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationRulesItems0) validateName(formats strfmt.Registry) error {

	if swag.IsZero(o.Name) { // not required
		return nil
	}

	if err := validate.MaxLength("name", "body", string(o.Name), 255); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationRulesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationRulesItems0) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyRiskInformationRulesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyRiskInformationScore create decision manager case created body risk information score
swagger:model CreateDecisionManagerCaseCreatedBodyRiskInformationScore
*/
type CreateDecisionManagerCaseCreatedBodyRiskInformationScore struct {

	// factor codes
	FactorCodes []string `json:"factorCodes"`

	// Name of the score model used for the transaction. If you did not include a custom model in your request,
	// this field contains the name of CyberSource’s default model.
	//
	// For all possible values, see the `score_model_used` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 255
	ModelUsed string `json:"modelUsed,omitempty"`

	// Total score calculated for this order. The value cannot be negative.
	//
	// For all possible values, see the `score_score_result` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 255
	Result string `json:"result,omitempty"`
}

// Validate validates this create decision manager case created body risk information score
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationScore) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateModelUsed(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationScore) validateModelUsed(formats strfmt.Registry) error {

	if swag.IsZero(o.ModelUsed) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"score"+"."+"modelUsed", "body", string(o.ModelUsed), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationScore) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(o.Result) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"score"+"."+"result", "body", string(o.Result), 255); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationScore) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationScore) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyRiskInformationScore
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyRiskInformationTravel create decision manager case created body risk information travel
swagger:model CreateDecisionManagerCaseCreatedBodyRiskInformationTravel
*/
type CreateDecisionManagerCaseCreatedBodyRiskInformationTravel struct {

	// actual final destination
	ActualFinalDestination *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelActualFinalDestination `json:"actualFinalDestination,omitempty"`

	// first departure
	FirstDeparture *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDeparture `json:"firstDeparture,omitempty"`

	// first destination
	FirstDestination *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDestination `json:"firstDestination,omitempty"`

	// last destination
	LastDestination *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelLastDestination `json:"lastDestination,omitempty"`
}

// Validate validates this create decision manager case created body risk information travel
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateActualFinalDestination(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstDeparture(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstDestination(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastDestination(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravel) validateActualFinalDestination(formats strfmt.Registry) error {

	if swag.IsZero(o.ActualFinalDestination) { // not required
		return nil
	}

	if o.ActualFinalDestination != nil {
		if err := o.ActualFinalDestination.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "riskInformation" + "." + "travel" + "." + "actualFinalDestination")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravel) validateFirstDeparture(formats strfmt.Registry) error {

	if swag.IsZero(o.FirstDeparture) { // not required
		return nil
	}

	if o.FirstDeparture != nil {
		if err := o.FirstDeparture.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "riskInformation" + "." + "travel" + "." + "firstDeparture")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravel) validateFirstDestination(formats strfmt.Registry) error {

	if swag.IsZero(o.FirstDestination) { // not required
		return nil
	}

	if o.FirstDestination != nil {
		if err := o.FirstDestination.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "riskInformation" + "." + "travel" + "." + "firstDestination")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravel) validateLastDestination(formats strfmt.Registry) error {

	if swag.IsZero(o.LastDestination) { // not required
		return nil
	}

	if o.LastDestination != nil {
		if err := o.LastDestination.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "riskInformation" + "." + "travel" + "." + "lastDestination")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravel) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravel) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyRiskInformationTravel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyRiskInformationTravelActualFinalDestination create decision manager case created body risk information travel actual final destination
swagger:model CreateDecisionManagerCaseCreatedBodyRiskInformationTravelActualFinalDestination
*/
type CreateDecisionManagerCaseCreatedBodyRiskInformationTravelActualFinalDestination struct {

	// Country of actual final destination on the route.
	// Max Length: 90
	Country string `json:"country,omitempty"`

	// Latitude of actual final destination on the route.
	// Max Length: 10
	Latitude string `json:"latitude,omitempty"`

	// City of actual final destination on the route.
	// Max Length: 90
	Locality string `json:"locality,omitempty"`

	// Longitude of actual final destination on the route.
	// Max Length: 10
	Longitude string `json:"longitude,omitempty"`
}

// Validate validates this create decision manager case created body risk information travel actual final destination
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelActualFinalDestination) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLatitude(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLongitude(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelActualFinalDestination) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"actualFinalDestination"+"."+"country", "body", string(o.Country), 90); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelActualFinalDestination) validateLatitude(formats strfmt.Registry) error {

	if swag.IsZero(o.Latitude) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"actualFinalDestination"+"."+"latitude", "body", string(o.Latitude), 10); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelActualFinalDestination) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"actualFinalDestination"+"."+"locality", "body", string(o.Locality), 90); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelActualFinalDestination) validateLongitude(formats strfmt.Registry) error {

	if swag.IsZero(o.Longitude) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"actualFinalDestination"+"."+"longitude", "body", string(o.Longitude), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelActualFinalDestination) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelActualFinalDestination) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyRiskInformationTravelActualFinalDestination
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDeparture create decision manager case created body risk information travel first departure
swagger:model CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDeparture
*/
type CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDeparture struct {

	// Country of first departure on the route.
	// Max Length: 90
	Country string `json:"country,omitempty"`

	// Latitude of first departure on the route.
	// Max Length: 10
	Latitude string `json:"latitude,omitempty"`

	// City of first departure on the route.
	// Max Length: 90
	Locality string `json:"locality,omitempty"`

	// Longitude of first departure on the route.
	// Max Length: 10
	Longitude string `json:"longitude,omitempty"`
}

// Validate validates this create decision manager case created body risk information travel first departure
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDeparture) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLatitude(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLongitude(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDeparture) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"firstDeparture"+"."+"country", "body", string(o.Country), 90); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDeparture) validateLatitude(formats strfmt.Registry) error {

	if swag.IsZero(o.Latitude) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"firstDeparture"+"."+"latitude", "body", string(o.Latitude), 10); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDeparture) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"firstDeparture"+"."+"locality", "body", string(o.Locality), 90); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDeparture) validateLongitude(formats strfmt.Registry) error {

	if swag.IsZero(o.Longitude) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"firstDeparture"+"."+"longitude", "body", string(o.Longitude), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDeparture) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDeparture) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDeparture
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDestination create decision manager case created body risk information travel first destination
swagger:model CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDestination
*/
type CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDestination struct {

	// Country of first destination on the route.
	// Max Length: 90
	Country string `json:"country,omitempty"`

	// Latitude of first destination on the route.
	// Max Length: 10
	Latitude string `json:"latitude,omitempty"`

	// City of first destination on the route.
	// Max Length: 90
	Locality string `json:"locality,omitempty"`

	// Longitude of first destination on the route.
	// Max Length: 10
	Longitude string `json:"longitude,omitempty"`
}

// Validate validates this create decision manager case created body risk information travel first destination
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDestination) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLatitude(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLongitude(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDestination) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"firstDestination"+"."+"country", "body", string(o.Country), 90); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDestination) validateLatitude(formats strfmt.Registry) error {

	if swag.IsZero(o.Latitude) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"firstDestination"+"."+"latitude", "body", string(o.Latitude), 10); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDestination) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"firstDestination"+"."+"locality", "body", string(o.Locality), 90); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDestination) validateLongitude(formats strfmt.Registry) error {

	if swag.IsZero(o.Longitude) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"firstDestination"+"."+"longitude", "body", string(o.Longitude), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDestination) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDestination) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyRiskInformationTravelFirstDestination
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyRiskInformationTravelLastDestination create decision manager case created body risk information travel last destination
swagger:model CreateDecisionManagerCaseCreatedBodyRiskInformationTravelLastDestination
*/
type CreateDecisionManagerCaseCreatedBodyRiskInformationTravelLastDestination struct {

	// Country of last destination on the route.
	// Max Length: 90
	Country string `json:"country,omitempty"`

	// Latitude of last destination on the route.
	// Max Length: 10
	Latitude string `json:"latitude,omitempty"`

	// City of last destination on the route.
	// Max Length: 90
	Locality string `json:"locality,omitempty"`

	// Longitude of last destination on the route.
	// Max Length: 10
	Longitude string `json:"longitude,omitempty"`
}

// Validate validates this create decision manager case created body risk information travel last destination
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelLastDestination) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLatitude(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLongitude(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelLastDestination) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"lastDestination"+"."+"country", "body", string(o.Country), 90); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelLastDestination) validateLatitude(formats strfmt.Registry) error {

	if swag.IsZero(o.Latitude) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"lastDestination"+"."+"latitude", "body", string(o.Latitude), 10); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelLastDestination) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"lastDestination"+"."+"locality", "body", string(o.Locality), 90); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelLastDestination) validateLongitude(formats strfmt.Registry) error {

	if swag.IsZero(o.Longitude) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"travel"+"."+"lastDestination"+"."+"longitude", "body", string(o.Longitude), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelLastDestination) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationTravelLastDestination) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyRiskInformationTravelLastDestination
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyRiskInformationVelocity create decision manager case created body risk information velocity
swagger:model CreateDecisionManagerCaseCreatedBodyRiskInformationVelocity
*/
type CreateDecisionManagerCaseCreatedBodyRiskInformationVelocity struct {

	// address
	Address []string `json:"address"`

	// List of information codes triggered by the order. These information codes were generated when you created the order and product velocity rules and are returned so that you can associate them with the rules.
	//
	// For all possible values, see the `decision_velocity_info` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	Morphing []*CreateDecisionManagerCaseCreatedBodyRiskInformationVelocityMorphingItems0 `json:"morphing"`
}

// Validate validates this create decision manager case created body risk information velocity
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationVelocity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMorphing(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationVelocity) validateAddress(formats strfmt.Registry) error {

	if swag.IsZero(o.Address) { // not required
		return nil
	}

	for i := 0; i < len(o.Address); i++ {

		if err := validate.MaxLength("createDecisionManagerCaseCreated"+"."+"riskInformation"+"."+"velocity"+"."+"address"+"."+strconv.Itoa(i), "body", string(o.Address[i]), 255); err != nil {
			return err
		}

	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationVelocity) validateMorphing(formats strfmt.Registry) error {

	if swag.IsZero(o.Morphing) { // not required
		return nil
	}

	for i := 0; i < len(o.Morphing); i++ {
		if swag.IsZero(o.Morphing[i]) { // not required
			continue
		}

		if o.Morphing[i] != nil {
			if err := o.Morphing[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("createDecisionManagerCaseCreated" + "." + "riskInformation" + "." + "velocity" + "." + "morphing" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationVelocity) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationVelocity) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyRiskInformationVelocity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseCreatedBodyRiskInformationVelocityMorphingItems0 create decision manager case created body risk information velocity morphing items0
swagger:model CreateDecisionManagerCaseCreatedBodyRiskInformationVelocityMorphingItems0
*/
type CreateDecisionManagerCaseCreatedBodyRiskInformationVelocityMorphingItems0 struct {

	// Morphing count specified by the number #.
	//
	// **Note** The count is not returned for the initial transaction.
	//
	// For all possible values, see the `decision_velocity_morphing_#_count` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 5
	Count int64 `json:"count,omitempty"`

	// Field name of the morphing element. specified by the setting that you chose in the
	// Velocity Editor.
	//
	// For all possible values, see the `decisionReply_morphingElement_#_fieldName` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 255
	FieldName string `json:"fieldName,omitempty"`

	// Identifier that CyberSource assigned to the velocity rule specified by the number #.
	//
	// For all possible values, see the `decision_velocity_morphing_#_info_code` field description in the _Decision Manager Using the SCMP API Developer Guide_ on the [CyberSource Business Center.](https://ebc2.cybersource.com/ebc2/) Click **Decision Manager** > **Documentation** > **Guides** > _Decision Manager Using the SCMP API Developer Guide_ (PDF link).
	//
	// Max Length: 255
	InformationCode string `json:"informationCode,omitempty"`
}

// Validate validates this create decision manager case created body risk information velocity morphing items0
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationVelocityMorphingItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFieldName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateInformationCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationVelocityMorphingItems0) validateCount(formats strfmt.Registry) error {

	if swag.IsZero(o.Count) { // not required
		return nil
	}

	if err := validate.MaxLength("count", "body", string(o.Count), 5); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationVelocityMorphingItems0) validateFieldName(formats strfmt.Registry) error {

	if swag.IsZero(o.FieldName) { // not required
		return nil
	}

	if err := validate.MaxLength("fieldName", "body", string(o.FieldName), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationVelocityMorphingItems0) validateInformationCode(formats strfmt.Registry) error {

	if swag.IsZero(o.InformationCode) { // not required
		return nil
	}

	if err := validate.MaxLength("informationCode", "body", string(o.InformationCode), 255); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationVelocityMorphingItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseCreatedBodyRiskInformationVelocityMorphingItems0) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseCreatedBodyRiskInformationVelocityMorphingItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyBuyerInformation Contains information about the buyer.
swagger:model CreateDecisionManagerCaseParamsBodyBuyerInformation
*/
type CreateDecisionManagerCaseParamsBodyBuyerInformation struct {

	// Recipient’s date of birth. **Format**: `YYYYMMDD`.
	//
	// This field is a `pass-through`, which means that CyberSource ensures that the value is eight numeric characters
	// but otherwise does not verify the value or modify it in any way before sending it to the processor. If the field
	// is not required for the transaction, CyberSource does not forward it to the processor.
	//
	// For more details, see `recipient_date_of_birth` field description in the [Credit Card Services Using the SCMP API Guide.](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm)
	//
	// Max Length: 8
	DateOfBirth string `json:"dateOfBirth,omitempty"`

	// The merchant's password that CyberSource hashes and stores as a hashed password.
	//
	// For details about this field, see the `customer_password` field description in [Decision Manager Developer Guide Using the SCMP API.](https://www.cybersource.com/developers/documentation/fraud_management/)
	//
	// Max Length: 100
	HashedPassword string `json:"hashedPassword,omitempty"`

	// personal identification
	PersonalIdentification []*CreateDecisionManagerCaseParamsBodyBuyerInformationPersonalIdentificationItems0 `json:"personalIdentification"`

	// Specifies the customer account user name.
	// Max Length: 255
	Username string `json:"username,omitempty"`
}

// Validate validates this create decision manager case params body buyer information
func (o *CreateDecisionManagerCaseParamsBodyBuyerInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDateOfBirth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateHashedPassword(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePersonalIdentification(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUsername(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyBuyerInformation) validateDateOfBirth(formats strfmt.Registry) error {

	if swag.IsZero(o.DateOfBirth) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"buyerInformation"+"."+"dateOfBirth", "body", string(o.DateOfBirth), 8); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyBuyerInformation) validateHashedPassword(formats strfmt.Registry) error {

	if swag.IsZero(o.HashedPassword) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"buyerInformation"+"."+"hashedPassword", "body", string(o.HashedPassword), 100); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyBuyerInformation) validatePersonalIdentification(formats strfmt.Registry) error {

	if swag.IsZero(o.PersonalIdentification) { // not required
		return nil
	}

	for i := 0; i < len(o.PersonalIdentification); i++ {
		if swag.IsZero(o.PersonalIdentification[i]) { // not required
			continue
		}

		if o.PersonalIdentification[i] != nil {
			if err := o.PersonalIdentification[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "buyerInformation" + "." + "personalIdentification" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyBuyerInformation) validateUsername(formats strfmt.Registry) error {

	if swag.IsZero(o.Username) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"buyerInformation"+"."+"username", "body", string(o.Username), 255); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyBuyerInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyBuyerInformation) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyBuyerInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyBuyerInformationPersonalIdentificationItems0 create decision manager case params body buyer information personal identification items0
swagger:model CreateDecisionManagerCaseParamsBodyBuyerInformationPersonalIdentificationItems0
*/
type CreateDecisionManagerCaseParamsBodyBuyerInformationPersonalIdentificationItems0 struct {

	// The value of the identification type. This field is supported only on the following processors.
	//
	// #### ComercioLatino
	// Set this field to the Cadastro de Pessoas Fisicas (CPF).
	//
	// #### CyberSource Latin American Processing
	// Supported for Redecard in Brazil. Set this field to the Cadastro de Pessoas Fisicas (CPF), which is required for AVS for Redecard in Brazil.
	// **Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.
	//
	// For processor-specific information, see the `personal_id` field in
	// [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// If `type = PASSPORT`, this is the cardholder's passport number.
	// Recommended for Discover ProtectBuy.
	//
	// Max Length: 26
	ID string `json:"id,omitempty"`

	// The government agency that issued the driver's license or passport.
	//
	// If **type**` = DRIVER_LICENSE`, this is the State or province where the customer’s driver’s license was issued.
	//
	// If **type**` = PASSPORT`, this is the Issuing country for the cardholder’s passport. Recommended for Discover ProtectBuy.
	//
	// Use the two-character State, Province, and Territory Codes for the United States and Canada.
	//
	// #### TeleCheck
	// Contact your TeleCheck representative to find out whether this field is required or optional.
	//
	// #### All Other Processors
	// Not used.
	//
	// For details about the country that issued the passport, see `customer_passport_country` field description in [CyberSource Payer Authentication Using the SCMP API]
	// (https://apps.cybersource.com/library/documentation/dev_guides/Payer_Authentication_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm)
	//
	// For details about the state or province that issued the passport, see `driver_license_state` field description in [Electronic Check Services Using the SCMP API.](https://apps.cybersource.com/library/documentation/dev_guides/EChecks_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm)
	//
	IssuedBy string `json:"issuedBy,omitempty"`

	// The type of the identification.
	//
	// Possible values:
	//   - `NATIONAL`
	//   - `CPF`
	//   - `CPNJ`
	//   - `CURP`
	//   - `SSN`
	//   - `DRIVER_LICENSE`
	//
	// This field is supported only on the following processors.
	//
	// #### ComercioLatino
	// Set this field to the Cadastro de Pessoas Fisicas (CPF).
	//
	// #### CyberSource Latin American Processing
	// Supported for Redecard in Brazil. Set this field to the Cadastro de Pessoas Fisicas (CPF), which is required for AVS for Redecard in Brazil.
	// **Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.
	//
	// For processor-specific information, see the `personal_id` field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	Type string `json:"type,omitempty"`
}

// Validate validates this create decision manager case params body buyer information personal identification items0
func (o *CreateDecisionManagerCaseParamsBodyBuyerInformationPersonalIdentificationItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyBuyerInformationPersonalIdentificationItems0) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MaxLength("id", "body", string(o.ID), 26); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyBuyerInformationPersonalIdentificationItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyBuyerInformationPersonalIdentificationItems0) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyBuyerInformationPersonalIdentificationItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyCardVerification create decision manager case params body card verification
swagger:model CreateDecisionManagerCaseParamsBodyCardVerification
*/
type CreateDecisionManagerCaseParamsBodyCardVerification struct {

	// CVN result code.
	//
	// For details, see the `auth_cv_result` reply field description in the [Credit Card Services Using the SCMP API Guide.](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm)
	//
	// Max Length: 1
	ResultCode string `json:"resultCode,omitempty"`
}

// Validate validates this create decision manager case params body card verification
func (o *CreateDecisionManagerCaseParamsBodyCardVerification) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResultCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyCardVerification) validateResultCode(formats strfmt.Registry) error {

	if swag.IsZero(o.ResultCode) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"cardVerification"+"."+"resultCode", "body", string(o.ResultCode), 1); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyCardVerification) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyCardVerification) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyCardVerification
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyClientReferenceInformation create decision manager case params body client reference information
swagger:model CreateDecisionManagerCaseParamsBodyClientReferenceInformation
*/
type CreateDecisionManagerCaseParamsBodyClientReferenceInformation struct {

	// Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each
	// transaction so that you can perform meaningful searches for the transaction.
	//
	// For information about tracking orders, see "Tracking and Reconciling Your Orders" in [Getting Started with CyberSource Advanced for the SCMP API.](https://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm)
	//
	// #### FDC Nashville Global
	// Certain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.
	//
	// Max Length: 50
	Code string `json:"code,omitempty"`

	// Brief description of the order or any comment you wish to add to the order.
	// Max Length: 255
	Comments string `json:"comments,omitempty"`
}

// Validate validates this create decision manager case params body client reference information
func (o *CreateDecisionManagerCaseParamsBodyClientReferenceInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateComments(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyClientReferenceInformation) validateCode(formats strfmt.Registry) error {

	if swag.IsZero(o.Code) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"clientReferenceInformation"+"."+"code", "body", string(o.Code), 50); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyClientReferenceInformation) validateComments(formats strfmt.Registry) error {

	if swag.IsZero(o.Comments) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"clientReferenceInformation"+"."+"comments", "body", string(o.Comments), 255); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyClientReferenceInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyClientReferenceInformation) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyClientReferenceInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyDeviceInformation create decision manager case params body device information
swagger:model CreateDecisionManagerCaseParamsBodyDeviceInformation
*/
type CreateDecisionManagerCaseParamsBodyDeviceInformation struct {

	// Whether the customer’s browser accepts cookies. This field can contain one of the following values:
	// - `yes`: The customer’s browser accepts cookies.
	// - `no`: The customer’s browser does not accept cookies.
	//
	CookiesAccepted string `json:"cookiesAccepted,omitempty"`

	// Field that contains the session ID that you send to Decision Manager to obtain the device fingerprint
	// information. The string can contain uppercase and lowercase letters, digits, hyphen (-), and
	// underscore (_). However, do not use the same uppercase and lowercase letters to indicate
	// different session IDs.
	//
	// The session ID must be unique for each merchant ID. You can use any string that you are already
	// generating, such as an order number or web session ID.
	//
	// The session ID must be unique for each page load, regardless of an individual’s web session ID.
	// If a user navigates to a profiled page and is assigned a web session, navigates away from the
	// profiled page, then navigates back to the profiled page, the generated session ID should be different
	// and unique. You may use a web session ID, but it is preferable to use an application GUID (Globally
	// Unique Identifier). This measure ensures that a unique ID is generated every time the page is
	// loaded, even if it is the same user reloading the page.
	//
	FingerprintSessionID string `json:"fingerprintSessionId,omitempty"`

	// DNS resolved hostname from `ipAddress`.
	// Max Length: 60
	HostName string `json:"hostName,omitempty"`

	// Email address set in the customer’s browser, which may differ from customer email.
	//
	HTTPBrowserEmail string `json:"httpBrowserEmail,omitempty"`

	// IP address of the customer.
	//
	// Max Length: 48
	IPAddress string `json:"ipAddress,omitempty"`

	// Customer’s browser as identified from the HTTP header data. For example, `Mozilla` is the value that identifies
	// the Netscape browser.
	//
	// Max Length: 40
	UserAgent string `json:"userAgent,omitempty"`
}

// Validate validates this create decision manager case params body device information
func (o *CreateDecisionManagerCaseParamsBodyDeviceInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHostName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIPAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUserAgent(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyDeviceInformation) validateHostName(formats strfmt.Registry) error {

	if swag.IsZero(o.HostName) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"deviceInformation"+"."+"hostName", "body", string(o.HostName), 60); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyDeviceInformation) validateIPAddress(formats strfmt.Registry) error {

	if swag.IsZero(o.IPAddress) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"deviceInformation"+"."+"ipAddress", "body", string(o.IPAddress), 48); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyDeviceInformation) validateUserAgent(formats strfmt.Registry) error {

	if swag.IsZero(o.UserAgent) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"deviceInformation"+"."+"userAgent", "body", string(o.UserAgent), 40); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyDeviceInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyDeviceInformation) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyDeviceInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyOrderInformation Contains detailed order-level information.
swagger:model CreateDecisionManagerCaseParamsBodyOrderInformation
*/
type CreateDecisionManagerCaseParamsBodyOrderInformation struct {

	// amount details
	AmountDetails *CreateDecisionManagerCaseParamsBodyOrderInformationAmountDetails `json:"amountDetails,omitempty"`

	// bill to
	BillTo *CreateDecisionManagerCaseParamsBodyOrderInformationBillTo `json:"billTo,omitempty"`

	// This array contains detailed information about individual products in the order.
	LineItems []*CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0 `json:"lineItems"`

	// Boolean that indicates whether returns are accepted for this order.
	// This field can contain one of the following values:
	// - true: Returns are accepted for this order.
	// - false: Returns are not accepted for this order.
	//
	ReturnsAccepted bool `json:"returnsAccepted,omitempty"`

	// ship to
	ShipTo *CreateDecisionManagerCaseParamsBodyOrderInformationShipTo `json:"shipTo,omitempty"`

	// shipping details
	ShippingDetails *CreateDecisionManagerCaseParamsBodyOrderInformationShippingDetails `json:"shippingDetails,omitempty"`
}

// Validate validates this create decision manager case params body order information
func (o *CreateDecisionManagerCaseParamsBodyOrderInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAmountDetails(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBillTo(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLineItems(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateShipTo(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateShippingDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformation) validateAmountDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.AmountDetails) { // not required
		return nil
	}

	if o.AmountDetails != nil {
		if err := o.AmountDetails.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "orderInformation" + "." + "amountDetails")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformation) validateBillTo(formats strfmt.Registry) error {

	if swag.IsZero(o.BillTo) { // not required
		return nil
	}

	if o.BillTo != nil {
		if err := o.BillTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "orderInformation" + "." + "billTo")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformation) validateLineItems(formats strfmt.Registry) error {

	if swag.IsZero(o.LineItems) { // not required
		return nil
	}

	for i := 0; i < len(o.LineItems); i++ {
		if swag.IsZero(o.LineItems[i]) { // not required
			continue
		}

		if o.LineItems[i] != nil {
			if err := o.LineItems[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "orderInformation" + "." + "lineItems" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformation) validateShipTo(formats strfmt.Registry) error {

	if swag.IsZero(o.ShipTo) { // not required
		return nil
	}

	if o.ShipTo != nil {
		if err := o.ShipTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "orderInformation" + "." + "shipTo")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformation) validateShippingDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.ShippingDetails) { // not required
		return nil
	}

	if o.ShippingDetails != nil {
		if err := o.ShippingDetails.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "orderInformation" + "." + "shippingDetails")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyOrderInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyOrderInformation) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyOrderInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyOrderInformationAmountDetails Contains `currency` and `totalAmount` for this order.
swagger:model CreateDecisionManagerCaseParamsBodyOrderInformationAmountDetails
*/
type CreateDecisionManagerCaseParamsBodyOrderInformationAmountDetails struct {

	// Currency used for the order. Use the three-character I[ISO Standard Currency Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/currencies.pdf)
	//
	// For details about currency as used in partial authorizations, see "Features for Debit Cards and Prepaid Cards" in the [Credit Card Services Using the SCMP API Guide](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm)
	//
	// For an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your payment authorization request.
	//
	// #### DCC for First Data
	// Your local currency. For details, see the `currency` field description in [Dynamic Currency Conversion For First Data Using the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/DCC_FirstData_SCMP/DCC_FirstData_SCMP_API.pdf).
	//
	// Required: true
	// Max Length: 3
	Currency *string `json:"currency"`

	// Grand total for the order. This value cannot be negative. You can include a decimal point (.), but no other special characters. CyberSource truncates the amount to the correct number of decimal places.
	//
	// **Note** For CTV, FDCCompass, Paymentech processors, the maximum length for this field is 12.
	//
	// **Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. For details, see:
	// - "Authorization Information for Specific Processors" in the [Credit Card Services Using the SCMP API Guide](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm).
	// - "Capture Information for Specific Processors" in the [Credit Card Services Using the SCMP API Guide](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm).
	// - "Credit Information for Specific Processors" in the [Credit Card Services Using the SCMP API Guide](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm).
	//
	// If your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. For details, see "Zero Amount Authorizations," "Credit Information for Specific Processors" in [Credit Card Services Using the SCMP API.](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm)
	//
	// #### DCC with a Third-Party Provider
	// Set this field to the converted amount that was returned by the DCC provider. You must include either this field or the 1st line item in the order and the specific line-order amount in your request. For details, see `grand_total_amount` field description in [Dynamic Currency Conversion For First Data Using the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/DCC_FirstData_SCMP/DCC_FirstData_SCMP_API.pdf).
	//
	// #### FDMS South
	// If you accept IDR or CLP currencies, see the entry for FDMS South in "Authorization Information for Specific Processors" of the [Credit Card Services Using the SCMP API.](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm)
	//
	// #### DCC for First Data
	// Not used.
	//
	// #### Invoicing
	// Grand total for the order, this is required for creating a new invoice.
	//
	// Max Length: 19
	TotalAmount string `json:"totalAmount,omitempty"`
}

// Validate validates this create decision manager case params body order information amount details
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationAmountDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCurrency(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTotalAmount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationAmountDetails) validateCurrency(formats strfmt.Registry) error {

	if err := validate.Required("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"amountDetails"+"."+"currency", "body", o.Currency); err != nil {
		return err
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"amountDetails"+"."+"currency", "body", string(*o.Currency), 3); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationAmountDetails) validateTotalAmount(formats strfmt.Registry) error {

	if swag.IsZero(o.TotalAmount) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"amountDetails"+"."+"totalAmount", "body", string(o.TotalAmount), 19); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationAmountDetails) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationAmountDetails) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyOrderInformationAmountDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyOrderInformationBillTo create decision manager case params body order information bill to
swagger:model CreateDecisionManagerCaseParamsBodyOrderInformationBillTo
*/
type CreateDecisionManagerCaseParamsBodyOrderInformationBillTo struct {

	// Payment card billing street address as it appears on the credit card issuer’s records.
	//
	// #### Atos
	// This field must not contain colons (:).
	//
	// #### CyberSource through VisaNet
	// **Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.
	// Credit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.
	//
	// #### For Payouts: This field may be sent only for FDC Compass.
	//
	// **Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.
	//
	// For processor-specific information, see the `bill_address1` request-level field description in
	// [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Additional address information.
	//
	// For Payouts: This field may be sent only for FDC Compass.
	//
	// #### Atos
	// This field must not contain colons (:).
	//
	// #### Chase Paymentech Solutions, FDC Compass, and TSYS Acquiring Solutions
	// This value is used for AVS.
	//
	// #### CyberSource through VisaNet
	// **Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.
	// Credit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.
	//
	// For processor-specific information, see the `bill_address2` field description in
	// [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// State or province of the billing address. Use the State, Province, and Territory Codes for the United States
	// and Canada.
	//
	// For Payouts: This field may be sent only for FDC Compass.
	//
	// ##### CyberSource through VisaNet
	// Credit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.
	//
	// **Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.
	//
	// For processor-specific information, see the `bill_state` field description in
	// [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Payment card billing country. Use the two-character ISO Standard Country Codes.
	//
	// #### CyberSource through VisaNet
	// Credit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.
	//
	// **Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.
	//
	// For processor-specific information, see the `bill_country` field description in
	// [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Customer's email address, including the full domain name.
	//
	// #### CyberSource through VisaNet
	// Credit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.
	//
	// **Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.
	//
	// For processor-specific information, see the `customer_email` request-level field description in
	// [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// #### Invoicing
	// Email address for the customer for sending the invoice. If the invoice is in SENT status and email is updated, the old email customer payment link won't work and you must resend the invoice with the new payment link.
	//
	// Max Length: 255
	Email string `json:"email,omitempty"`

	// Customer’s first name. This name must be the same as the name on the card.
	//
	// #### CyberSource Latin American Processing
	// **Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\
	// **Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called _CyberSource Latin American Processing_. It is not for any other Latin American processors that CyberSource supports.
	//
	// #### CyberSource through VisaNet
	// Credit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.
	//
	// #### For Payouts:
	// This field may be sent only for FDC Compass.
	//
	// **Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.
	//
	// For processor-specific information, see the `customer_firstname` request-level field description in
	// [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// Max Length: 60
	FirstName string `json:"firstName,omitempty"`

	// Customer’s last name. This name must be the same as the name on the card.
	//
	// #### CyberSource Latin American Processing
	// **Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\
	// **Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.
	//
	// #### CyberSource through VisaNet
	// Credit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.
	//
	// **Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.
	//
	// #### For Payouts:
	// This field may be sent only for FDC Compass.
	//
	// For processor-specific information, see the `customer_lastname` request-level field description in
	// [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// Max Length: 60
	LastName string `json:"lastName,omitempty"`

	// Payment card billing city.
	//
	// #### Atos
	// This field must not contain colons (:).
	//
	// #### CyberSource through VisaNet
	// Credit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.
	//
	// #### For Payouts:
	// This field may be sent only for FDC Compass.
	//
	// For processor-specific information, see the `bill_city` field description in
	// [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Customer’s phone number.
	//
	// #### For Payouts:
	// This field may be sent only for FDC Compass.
	//
	// CyberSource recommends that you include the country code when the order is from outside the U.S.
	//
	// For processor-specific information, see the customer_phone field in
	// [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// #### CyberSource through VisaNet
	// Credit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.
	//
	// Max Length: 15
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// Postal code for the billing address. The postal code must consist of 5 to 9 digits.
	//
	// When the billing country is the U.S., the 9-digit postal code must follow this format:
	// [5 digits][dash][4 digits]
	//
	// **Example** `12345-6789`
	//
	// When the billing country is Canada, the 6-digit postal code must follow this format:
	// [alpha][numeric][alpha][space][numeric][alpha][numeric]
	//
	// **Example** `A1B 2C3`
	//
	// **Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.
	//
	// #### For Payouts:
	//  This field may be sent only for FDC Compass.
	//
	// #### American Express Direct
	// Before sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the remaining value is longer than nine characters, truncates the value starting from the right side.
	//
	// #### Atos
	// This field must not contain colons (:).
	//
	// #### CyberSource through VisaNet
	// Credit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.
	//
	// For processor-specific information, see the `bill_zip` request-level field description in
	// [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this create decision manager case params body order information bill to
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationBillTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePhoneNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationBillTo) validateAddress1(formats strfmt.Registry) error {

	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"billTo"+"."+"address1", "body", string(o.Address1), 60); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationBillTo) validateAddress2(formats strfmt.Registry) error {

	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"billTo"+"."+"address2", "body", string(o.Address2), 60); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationBillTo) validateAdministrativeArea(formats strfmt.Registry) error {

	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"billTo"+"."+"administrativeArea", "body", string(o.AdministrativeArea), 20); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationBillTo) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"billTo"+"."+"country", "body", string(o.Country), 2); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationBillTo) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"billTo"+"."+"email", "body", string(o.Email), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationBillTo) validateFirstName(formats strfmt.Registry) error {

	if swag.IsZero(o.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"billTo"+"."+"firstName", "body", string(o.FirstName), 60); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationBillTo) validateLastName(formats strfmt.Registry) error {

	if swag.IsZero(o.LastName) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"billTo"+"."+"lastName", "body", string(o.LastName), 60); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationBillTo) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"billTo"+"."+"locality", "body", string(o.Locality), 50); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationBillTo) validatePhoneNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.PhoneNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"billTo"+"."+"phoneNumber", "body", string(o.PhoneNumber), 15); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationBillTo) validatePostalCode(formats strfmt.Registry) error {

	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"billTo"+"."+"postalCode", "body", string(o.PostalCode), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationBillTo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationBillTo) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyOrderInformationBillTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0 create decision manager case params body order information line items items0
swagger:model CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0
*/
type CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0 struct {

	// Product’s identifier code. This field is inserted into the outgoing message without being parsed or formatted.
	// This field is included as Distributor product SKU (Offer) in the list of API fields with which you can create
	// custom rules.
	//
	// Max Length: 15
	DistributorProductSku string `json:"distributorProductSku,omitempty"`

	// Determines whether to assign risk to the order if the billing and shipping addresses specify different cities,
	// states, or countries. This field can contain one of the following values:
	// - true: Orders are assigned only slight additional risk if billing and shipping addresses are different.
	// - false: Orders are assigned higher additional risk if billing and shipping addresses are different.
	//
	Gift bool `json:"gift,omitempty"`

	// passenger
	Passenger *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger `json:"passenger,omitempty"`

	// Type of product. This value is used to determine the category that the product is in: electronic, handling,
	// physical, service, or shipping. The default value is **default**.
	// If you are performing an authorization transaction (`processingOptions.capture` is set to `false`), and you set this field to a value other than default or any of the values related to
	// shipping and handling, then the fields `quantity`, `productName`, and `productSku` are required.
	// It can also have a value of "gift_card".
	//
	// For details, see the `product_code` field description in the [Credit Card Services Using the SCMP API Guide.](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm)
	//
	// Max Length: 255
	ProductCode string `json:"productCode,omitempty"`

	// For an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`),
	// this field is required when `orderInformation.lineItems[].productCode` is not set to `default` or one of
	// the other values that are related to shipping and/or handling.
	//
	// Max Length: 255
	ProductName string `json:"productName,omitempty"`

	// Indicates the level of risk for the product. This field can contain one of the following values:
	// - `low`: The product is associated with few chargebacks.
	// - `normal`: The product is associated with a normal number of chargebacks.
	// - `high`: The product is associated with many chargebacks.
	//
	// Max Length: 6
	ProductRisk string `json:"productRisk,omitempty"`

	// Stock Keeping Unit (SKU) code for the product.
	//
	// For an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when _orderInformation.lineItems[].productCode_ is not set to **default** or one of the other values that are related to shipping and/or handling.
	//
	// Max Length: 255
	ProductSKU string `json:"productSKU,omitempty"`

	// Number of units for this order.
	//
	// The default is `1`. For an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when _orderInformation.lineItems[].productCode_ is not set to **default** or one of the other values that are related to shipping and/or handling.
	//
	// When orderInformation.lineItems[].productCode is "gift_card",
	// this is the total count of individual prepaid gift cards purchased.
	//
	// Maximum: 9.999999999e+09
	// Minimum: 1
	Quantity float64 `json:"quantity,omitempty"`

	// Per-item price of the product. This value cannot be negative. You can include a decimal point (.), but you
	// cannot include any other special characters. CyberSource truncates the amount to the correct number of decimal
	// places.
	//
	// For processor-specific information, see the `amount` field description in
	// [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// **Important** Some processors have specific requirements and limitations, such as maximum
	// amounts and maximum field lengths. See these guides for details:
	// - [Merchant Descriptors Using the SCMP API Guide]
	// (https://apps.cybersource.com/library/documentation/dev_guides/Merchant_Descriptors_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm)
	// - "Capture Information for Specific Processors" section in the [Credit Card Services Using the SCMP API Guide](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm)
	//
	// #### DCC with a Third-Party Provider
	// Set this field to the converted amount that was returned by the DCC provider. You must include either
	// the 1st line item in the order and this field, or the request-level field `orderInformation.amountDetails.totalAmount` in your request. For details, see "Dynamic Currency Conversion with a Third Party
	// Provider" in the [Credit Card Services Using the SCMP API Guide.](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm)
	//
	// #### FDMS South
	// If you accept IDR or CLP currencies, see the entry for FDMS South in the [Merchant Descriptors Using the SCMP API Guide.]
	// (https://apps.cybersource.com/library/documentation/dev_guides/Merchant_Descriptors_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm)
	//
	// #### Zero Amount Authorizations
	// If your processor supports zero amount authorizations, you can set this field to 0 for the
	// authorization to check if the card is lost or stolen. See "Zero Amount Authorizations" in the [Credit Card Services Using the SCMP API Guide.](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/wwhelp/wwhimpl/js/html/wwhelp.htm)
	//
	// Max Length: 15
	UnitPrice string `json:"unitPrice,omitempty"`
}

// Validate validates this create decision manager case params body order information line items items0
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDistributorProductSku(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePassenger(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProductCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProductName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProductRisk(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProductSKU(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateQuantity(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUnitPrice(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0) validateDistributorProductSku(formats strfmt.Registry) error {

	if swag.IsZero(o.DistributorProductSku) { // not required
		return nil
	}

	if err := validate.MaxLength("distributorProductSku", "body", string(o.DistributorProductSku), 15); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0) validatePassenger(formats strfmt.Registry) error {

	if swag.IsZero(o.Passenger) { // not required
		return nil
	}

	if o.Passenger != nil {
		if err := o.Passenger.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("passenger")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0) validateProductCode(formats strfmt.Registry) error {

	if swag.IsZero(o.ProductCode) { // not required
		return nil
	}

	if err := validate.MaxLength("productCode", "body", string(o.ProductCode), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0) validateProductName(formats strfmt.Registry) error {

	if swag.IsZero(o.ProductName) { // not required
		return nil
	}

	if err := validate.MaxLength("productName", "body", string(o.ProductName), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0) validateProductRisk(formats strfmt.Registry) error {

	if swag.IsZero(o.ProductRisk) { // not required
		return nil
	}

	if err := validate.MaxLength("productRisk", "body", string(o.ProductRisk), 6); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0) validateProductSKU(formats strfmt.Registry) error {

	if swag.IsZero(o.ProductSKU) { // not required
		return nil
	}

	if err := validate.MaxLength("productSKU", "body", string(o.ProductSKU), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0) validateQuantity(formats strfmt.Registry) error {

	if swag.IsZero(o.Quantity) { // not required
		return nil
	}

	if err := validate.Minimum("quantity", "body", float64(o.Quantity), 1, false); err != nil {
		return err
	}

	if err := validate.Maximum("quantity", "body", float64(o.Quantity), 9.999999999e+09, false); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0) validateUnitPrice(formats strfmt.Registry) error {

	if swag.IsZero(o.UnitPrice) { // not required
		return nil
	}

	if err := validate.MaxLength("unitPrice", "body", string(o.UnitPrice), 15); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger Contains travel-related passenger details.
swagger:model CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger
*/
type CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger struct {

	// Passenger's email address, including the full domain name, such as jdoe@example.com.
	// Max Length: 255
	Email string `json:"email,omitempty"`

	// Passenger's first name.
	// Max Length: 60
	FirstName string `json:"firstName,omitempty"`

	// ID of the passenger to whom the ticket was issued. For example, you can use this field for the frequent flyer
	// number.
	//
	// Max Length: 40
	ID string `json:"id,omitempty"`

	// Passenger's last name.
	// Max Length: 60
	LastName string `json:"lastName,omitempty"`

	// Passenger's nationality country. Use the two character ISO Standard Country Codes.
	// Max Length: 2
	Nationality string `json:"nationality,omitempty"`

	// Passenger's phone number. If the order is from outside the U.S., CyberSource recommends that you include
	// the [ISO Standard Country Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf)
	//
	// Max Length: 15
	Phone string `json:"phone,omitempty"`

	// Your company's passenger classification, such as with a frequent flyer program. In this case, you might use
	// values such as `standard`, `gold`, or `platinum`.
	//
	// Max Length: 32
	Status string `json:"status,omitempty"`

	// Passenger classification associated with the price of the ticket. You can use one of the following values:
	// - `ADT`: Adult
	// - `CNN`: Child
	// - `INF`: Infant
	// - `YTH`: Youth
	// - `STU`: Student
	// - `SCR`: Senior Citizen
	// - `MIL`: Military
	//
	// Max Length: 32
	Type string `json:"type,omitempty"`
}

// Validate validates this create decision manager case params body order information line items items0 passenger
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNationality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePhone(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("passenger"+"."+"email", "body", string(o.Email), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger) validateFirstName(formats strfmt.Registry) error {

	if swag.IsZero(o.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("passenger"+"."+"firstName", "body", string(o.FirstName), 60); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MaxLength("passenger"+"."+"id", "body", string(o.ID), 40); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger) validateLastName(formats strfmt.Registry) error {

	if swag.IsZero(o.LastName) { // not required
		return nil
	}

	if err := validate.MaxLength("passenger"+"."+"lastName", "body", string(o.LastName), 60); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger) validateNationality(formats strfmt.Registry) error {

	if swag.IsZero(o.Nationality) { // not required
		return nil
	}

	if err := validate.MaxLength("passenger"+"."+"nationality", "body", string(o.Nationality), 2); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger) validatePhone(formats strfmt.Registry) error {

	if swag.IsZero(o.Phone) { // not required
		return nil
	}

	if err := validate.MaxLength("passenger"+"."+"phone", "body", string(o.Phone), 15); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.Status) { // not required
		return nil
	}

	if err := validate.MaxLength("passenger"+"."+"status", "body", string(o.Status), 32); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger) validateType(formats strfmt.Registry) error {

	if swag.IsZero(o.Type) { // not required
		return nil
	}

	if err := validate.MaxLength("passenger"+"."+"type", "body", string(o.Type), 32); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyOrderInformationLineItemsItems0Passenger
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyOrderInformationShipTo Contains recipient shipping information.
swagger:model CreateDecisionManagerCaseParamsBodyOrderInformationShipTo
*/
type CreateDecisionManagerCaseParamsBodyOrderInformationShipTo struct {

	// First line of the shipping address.
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Second line of the shipping address.
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// State or province of the shipping address. Use the State, Province, and Territory Codes for the United States
	// and Canada.
	//
	// Max Length: 2
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Country of the shipping address. Use the two-character ISO Standard Country Codes.
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// First name of the recipient.
	//
	// **Processor specific maximum length**
	//
	// - Litle: 25
	// - All other processors: 60
	//
	// Max Length: 60
	FirstName string `json:"firstName,omitempty"`

	// Last name of the recipient.
	//
	// **Processor-specific maximum length**
	//
	// - Litle: 25
	// - All other processors: 60
	//
	// Max Length: 60
	LastName string `json:"lastName,omitempty"`

	// City of the shipping address.
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Phone number associated with the shipping address.
	// Max Length: 15
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// Postal code for the shipping address. The postal code must consist of 5 to 9 digits.
	//
	// When the billing country is the U.S., the 9-digit postal code must follow this format:
	// [5 digits][dash][4 digits]
	//
	// Example 12345-6789
	//
	// When the billing country is Canada, the 6-digit postal code must follow this format:
	// [alpha][numeric][alpha][space][numeric][alpha][numeric]
	//
	// Example A1B 2C3
	//
	// **American Express Direct**\
	// Before sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the
	// remaining value is longer than nine characters, truncates the value starting from the right side.
	//
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this create decision manager case params body order information ship to
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShipTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePhoneNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShipTo) validateAddress1(formats strfmt.Registry) error {

	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"address1", "body", string(o.Address1), 60); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShipTo) validateAddress2(formats strfmt.Registry) error {

	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"address2", "body", string(o.Address2), 60); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShipTo) validateAdministrativeArea(formats strfmt.Registry) error {

	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"administrativeArea", "body", string(o.AdministrativeArea), 2); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShipTo) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"country", "body", string(o.Country), 2); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShipTo) validateFirstName(formats strfmt.Registry) error {

	if swag.IsZero(o.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"firstName", "body", string(o.FirstName), 60); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShipTo) validateLastName(formats strfmt.Registry) error {

	if swag.IsZero(o.LastName) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"lastName", "body", string(o.LastName), 60); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShipTo) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"locality", "body", string(o.Locality), 50); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShipTo) validatePhoneNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.PhoneNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"phoneNumber", "body", string(o.PhoneNumber), 15); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShipTo) validatePostalCode(formats strfmt.Registry) error {

	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"postalCode", "body", string(o.PostalCode), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShipTo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShipTo) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyOrderInformationShipTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyOrderInformationShippingDetails Contains shipping information not related to address.
swagger:model CreateDecisionManagerCaseParamsBodyOrderInformationShippingDetails
*/
type CreateDecisionManagerCaseParamsBodyOrderInformationShippingDetails struct {

	// Boolean that indicates whether the customer requested gift wrapping for this
	// purchase. This field can contain one of the following
	// values:
	// - true: The customer requested gift wrapping.
	// - false: The customer did not request gift wrapping.
	//
	GiftWrap bool `json:"giftWrap,omitempty"`

	// Shipping method for the product. Possible values:
	//
	//  - `lowcost`: Lowest-cost service
	//  - `sameday`: Courier or same-day service
	//  - `oneday`: Next-day or overnight service
	//  - `twoday`: Two-day service
	//  - `threeday`: Three-day service
	//  - `pickup`: Store pick-up
	//  - `other`: Other shipping method
	//  - `none`: No shipping method because product is a service or subscription
	//
	// Max Length: 10
	ShippingMethod string `json:"shippingMethod,omitempty"`
}

// Validate validates this create decision manager case params body order information shipping details
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShippingDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateShippingMethod(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShippingDetails) validateShippingMethod(formats strfmt.Registry) error {

	if swag.IsZero(o.ShippingMethod) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"orderInformation"+"."+"shippingDetails"+"."+"shippingMethod", "body", string(o.ShippingMethod), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShippingDetails) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyOrderInformationShippingDetails) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyOrderInformationShippingDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyPaymentInformation Contains the payment data for this transaction.
swagger:model CreateDecisionManagerCaseParamsBodyPaymentInformation
*/
type CreateDecisionManagerCaseParamsBodyPaymentInformation struct {

	// card
	Card *CreateDecisionManagerCaseParamsBodyPaymentInformationCard `json:"card,omitempty"`

	// tokenized card
	TokenizedCard *CreateDecisionManagerCaseParamsBodyPaymentInformationTokenizedCard `json:"tokenizedCard,omitempty"`
}

// Validate validates this create decision manager case params body payment information
func (o *CreateDecisionManagerCaseParamsBodyPaymentInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCard(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTokenizedCard(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyPaymentInformation) validateCard(formats strfmt.Registry) error {

	if swag.IsZero(o.Card) { // not required
		return nil
	}

	if o.Card != nil {
		if err := o.Card.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "paymentInformation" + "." + "card")
			}
			return err
		}
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyPaymentInformation) validateTokenizedCard(formats strfmt.Registry) error {

	if swag.IsZero(o.TokenizedCard) { // not required
		return nil
	}

	if o.TokenizedCard != nil {
		if err := o.TokenizedCard.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "paymentInformation" + "." + "tokenizedCard")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyPaymentInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyPaymentInformation) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyPaymentInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyPaymentInformationCard Use this for a non-tokenized payment card.
swagger:model CreateDecisionManagerCaseParamsBodyPaymentInformationCard
*/
type CreateDecisionManagerCaseParamsBodyPaymentInformationCard struct {

	// description: The BIN is the first six digits of the card's Primary Account Number (PAN).
	//
	// Max Length: 6
	Bin string `json:"bin,omitempty"`

	// Two-digit month in which the payment card expires.
	//
	// Format: `MM`.
	//
	// Valid values: `01` through `12`.
	//
	// #### Barclays and Streamline
	// For Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`01` through `12`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.
	//
	// #### Encoded Account Numbers
	// For encoded account numbers (_type_=039), if there is no expiration date on the card, use `12`.
	//
	// **Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.
	//
	// For processor-specific information, see the `customer_cc_expmo` field description in
	// [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// Max Length: 2
	ExpirationMonth string `json:"expirationMonth,omitempty"`

	// Four-digit year in which the credit card expires.
	//
	// Format: `YYYY`.
	//
	// #### Barclays and Streamline
	// For Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`1900` through `3000`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.
	//
	// #### Encoded Account Numbers
	// For encoded account numbers (**_type_**`=039`), if there is no expiration date on the card, use `2021`.
	//
	// #### FDC Nashville Global and FDMS South
	// You can send in 2 digits or 4 digits. If you send in 2 digits, they must be the last 2 digits of the year.
	//
	// **Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.
	//
	// For processor-specific information, see the `customer_cc_expyr` field description in
	// [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// Max Length: 4
	ExpirationYear string `json:"expirationYear,omitempty"`

	// The customer’s payment card number, also knows as the Primary Account Nunmber (PAN). You can also use this field
	// for encoded account numbers.
	//
	// For processor-specific information, see the `customer_cc_number` field description in
	// [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// Max Length: 20
	Number string `json:"number,omitempty"`

	// Three-digit value that indicates the card type.
	//
	// Type of card to authorize.
	// - 001 Visa
	// - 002 Mastercard
	// - 003 Amex
	// - 004 Discover
	// - 005: Diners Club
	// - 007: JCB
	// - 024: Maestro (UK Domestic)
	// - 039 Encoded account number
	// - 042: Maestro (International)
	//
	// For the complete list of possible values, see `card_type` field description in the [Credit Card Services Using the SCMP API Guide.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	Type string `json:"type,omitempty"`
}

// Validate validates this create decision manager case params body payment information card
func (o *CreateDecisionManagerCaseParamsBodyPaymentInformationCard) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBin(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpirationMonth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpirationYear(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNumber(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyPaymentInformationCard) validateBin(formats strfmt.Registry) error {

	if swag.IsZero(o.Bin) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"paymentInformation"+"."+"card"+"."+"bin", "body", string(o.Bin), 6); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyPaymentInformationCard) validateExpirationMonth(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationMonth) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"paymentInformation"+"."+"card"+"."+"expirationMonth", "body", string(o.ExpirationMonth), 2); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyPaymentInformationCard) validateExpirationYear(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationYear) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"paymentInformation"+"."+"card"+"."+"expirationYear", "body", string(o.ExpirationYear), 4); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyPaymentInformationCard) validateNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.Number) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"paymentInformation"+"."+"card"+"."+"number", "body", string(o.Number), 20); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyPaymentInformationCard) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyPaymentInformationCard) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyPaymentInformationCard
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyPaymentInformationTokenizedCard Use this object to submit a payment network token instead of card-based values.
swagger:model CreateDecisionManagerCaseParamsBodyPaymentInformationTokenizedCard
*/
type CreateDecisionManagerCaseParamsBodyPaymentInformationTokenizedCard struct {

	// One of two possible meanings:
	// - The two-digit month in which a token expires.
	// - The two-digit month in which a card expires.
	// Format: `MM`
	// Possible values: `01` through `12`
	//
	// **NOTE** The meaning of this field is dependent on the payment processor that is returning the value in an authorization reply. Please see the processor-specific details below.
	//
	// #### Barclays and Streamline
	// For Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`01` through `12`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.
	//
	// #### Encoded Account Numbers
	// For encoded account numbers (`card_type=039`), if there is no expiration date on the card, use `12`.\
	// **Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.
	//
	// #### Samsung Pay and Apple Pay
	// Month in which the token expires. CyberSource includes this field in the reply message when it decrypts the payment blob for the tokenized transaction.
	//
	// For processor-specific information, see the `customer_cc_expmo` field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// Max Length: 2
	ExpirationMonth string `json:"expirationMonth,omitempty"`

	// One of two possible meanings:
	// - The four-digit year in which a token expires.
	// - The four-digit year in which a card expires.
	// Format: `YYYY`
	// Possible values: `1900` through `3000`
	// Data type: Non-negative integer
	//
	// **NOTE** The meaning of this field is dependent on the payment processor that is returning the value in an authorization reply. Please see the processor-specific details below.
	//
	// #### Barclays and Streamline
	// For Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (1900 through
	// 3000) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.
	//
	// #### Encoded Account Numbers
	// For encoded account numbers (`card_ type=039`), if there is no expiration date on the card, use `2021`.
	//
	// #### FDC Nashville Global and FDMS South
	// You can send in 2 digits or 4 digits. When you send in 2 digits, they must be the last 2 digits of
	// the year.
	//
	// #### Samsung Pay and Apple Pay
	// Year in which the token expires. CyberSource includes this field in the reply message when it decrypts the payment blob for the tokenized transaction.
	//
	// **Important** It is your responsibility to determine whether a field is required for the transaction
	// you are requesting.
	//
	// For processor-specific information, see the `customer_cc_expyr` or `token_expiration_year` field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	// Max Length: 4
	ExpirationYear string `json:"expirationYear,omitempty"`

	// Customer’s payment network token value.
	//
	// Max Length: 20
	Number string `json:"number,omitempty"`

	// Three-digit value that indicates the card type.
	//
	// Type of card to authorize.
	// - 001 Visa
	// - 002 Mastercard
	// - 003 Amex
	// - 004 Discover
	// - 005: Diners Club
	// - 007: JCB
	// - 024: Maestro (UK Domestic)
	// - 039 Encoded account number
	// - 042: Maestro (International)
	//
	// For the complete list of possible values, see `card_type` field description in the [Credit Card Services Using the SCMP API Guide.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)
	//
	Type string `json:"type,omitempty"`
}

// Validate validates this create decision manager case params body payment information tokenized card
func (o *CreateDecisionManagerCaseParamsBodyPaymentInformationTokenizedCard) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExpirationMonth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpirationYear(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNumber(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyPaymentInformationTokenizedCard) validateExpirationMonth(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationMonth) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"paymentInformation"+"."+"tokenizedCard"+"."+"expirationMonth", "body", string(o.ExpirationMonth), 2); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyPaymentInformationTokenizedCard) validateExpirationYear(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationYear) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"paymentInformation"+"."+"tokenizedCard"+"."+"expirationYear", "body", string(o.ExpirationYear), 4); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyPaymentInformationTokenizedCard) validateNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.Number) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"paymentInformation"+"."+"tokenizedCard"+"."+"number", "body", string(o.Number), 20); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyPaymentInformationTokenizedCard) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyPaymentInformationTokenizedCard) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyPaymentInformationTokenizedCard
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyProcessorInformation Contains information related to the payment processor.
swagger:model CreateDecisionManagerCaseParamsBodyProcessorInformation
*/
type CreateDecisionManagerCaseParamsBodyProcessorInformation struct {

	// avs
	Avs *CreateDecisionManagerCaseParamsBodyProcessorInformationAvs `json:"avs,omitempty"`
}

// Validate validates this create decision manager case params body processor information
func (o *CreateDecisionManagerCaseParamsBodyProcessorInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAvs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyProcessorInformation) validateAvs(formats strfmt.Registry) error {

	if swag.IsZero(o.Avs) { // not required
		return nil
	}

	if o.Avs != nil {
		if err := o.Avs.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "processorInformation" + "." + "avs")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyProcessorInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyProcessorInformation) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyProcessorInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyProcessorInformationAvs Address Verification Service
swagger:model CreateDecisionManagerCaseParamsBodyProcessorInformationAvs
*/
type CreateDecisionManagerCaseParamsBodyProcessorInformationAvs struct {

	// Value returned for address verification from the Payments Authorization response.
	// Max Length: 3
	Code string `json:"code,omitempty"`
}

// Validate validates this create decision manager case params body processor information avs
func (o *CreateDecisionManagerCaseParamsBodyProcessorInformationAvs) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyProcessorInformationAvs) validateCode(formats strfmt.Registry) error {

	if swag.IsZero(o.Code) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"processorInformation"+"."+"avs"+"."+"code", "body", string(o.Code), 3); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyProcessorInformationAvs) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyProcessorInformationAvs) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyProcessorInformationAvs
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyRiskInformation create decision manager case params body risk information
swagger:model CreateDecisionManagerCaseParamsBodyRiskInformation
*/
type CreateDecisionManagerCaseParamsBodyRiskInformation struct {

	// Specifies one of the following types of events:
	// - login
	// - account_creation
	// - account_update
	// For regular payment transactions, do not send this field.
	//
	// Max Length: 255
	EventType string `json:"eventType,omitempty"`

	// profile
	Profile *CreateDecisionManagerCaseParamsBodyRiskInformationProfile `json:"profile,omitempty"`
}

// Validate validates this create decision manager case params body risk information
func (o *CreateDecisionManagerCaseParamsBodyRiskInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEventType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProfile(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyRiskInformation) validateEventType(formats strfmt.Registry) error {

	if swag.IsZero(o.EventType) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"riskInformation"+"."+"eventType", "body", string(o.EventType), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyRiskInformation) validateProfile(formats strfmt.Registry) error {

	if swag.IsZero(o.Profile) { // not required
		return nil
	}

	if o.Profile != nil {
		if err := o.Profile.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "riskInformation" + "." + "profile")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyRiskInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyRiskInformation) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyRiskInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyRiskInformationProfile Identifies a risk profile.
swagger:model CreateDecisionManagerCaseParamsBodyRiskInformationProfile
*/
type CreateDecisionManagerCaseParamsBodyRiskInformationProfile struct {

	// Name of the active profile chosen by the profile selector. If no profile selector exists,
	// the default active profile is chosen.
	//
	// **Note** By default, your default profile is the active profile, or the Profile Selector chooses the active profile. Use this field
	// only if you want to specify the name of a different profile. The passed-in profile will then become the active profile.
	//
	// Max Length: 30
	Name string `json:"name,omitempty"`
}

// Validate validates this create decision manager case params body risk information profile
func (o *CreateDecisionManagerCaseParamsBodyRiskInformationProfile) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyRiskInformationProfile) validateName(formats strfmt.Registry) error {

	if swag.IsZero(o.Name) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"riskInformation"+"."+"profile"+"."+"name", "body", string(o.Name), 30); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyRiskInformationProfile) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyRiskInformationProfile) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyRiskInformationProfile
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyTravelInformation create decision manager case params body travel information
swagger:model CreateDecisionManagerCaseParamsBodyTravelInformation
*/
type CreateDecisionManagerCaseParamsBodyTravelInformation struct {

	// IATA Code for the actual final destination that the customer intends to travel to.
	// It should be a destination on the completeRoute.
	//
	// Max Length: 3
	ActualFinalDestination string `json:"actualFinalDestination,omitempty"`

	// Concatenation of individual travel legs in the format ORIG1-DEST1[:ORIG2-DEST2...:ORIGn-DESTn], for
	// example, SFO-JFK:JFK-LHR:LHR-CDG. For airport codes, see the IATA Airline and Airport Code Search.
	// Note In your request, send either the complete route or the individual legs (_leg#_orig and _leg#_dest). If you
	// send all the fields, the value of _complete_route takes precedence over that of the _leg# fields.
	//
	// Max Length: 255
	CompleteRoute string `json:"completeRoute,omitempty"`

	// Departure date and time of the first leg of the trip. Use one of the following formats:
	//   - yyyy-MM-dd HH:mm z
	//   - yyyy-MM-dd hh:mm a z
	//   - yyyy-MM-dd hh:mma z
	//   HH = hour in 24-hour format
	//   hh = hour in 12-hour format
	//   a = am or pm (case insensitive)
	//   z = time zone of the departing flight, for example: If the
	//   airline is based in city A, but the flight departs from city
	//   B, z is the time zone of city B at the time of departure.
	// Important For travel information, use GMT instead of UTC, or use the local time zone.
	// Examples
	// 2011-03-20 11:30 PM PDT
	// 2011-03-20 11:30pm GMT
	// 2011-03-20 11:30pm GMT-05:00
	// Eastern Standard Time: GMT-05:00 or EST
	// Note When specifying an offset from GMT, the format must be exactly as specified in the example. Insert no
	// spaces between the time zone and the offset.
	//
	// Max Length: 25
	DepartureTime string `json:"departureTime,omitempty"`

	// Type of travel, for example one way or round trip.
	// Max Length: 32
	JourneyType string `json:"journeyType,omitempty"`

	// legs
	Legs []*CreateDecisionManagerCaseParamsBodyTravelInformationLegsItems0 `json:"legs"`
}

// Validate validates this create decision manager case params body travel information
func (o *CreateDecisionManagerCaseParamsBodyTravelInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateActualFinalDestination(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCompleteRoute(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDepartureTime(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateJourneyType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLegs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyTravelInformation) validateActualFinalDestination(formats strfmt.Registry) error {

	if swag.IsZero(o.ActualFinalDestination) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"travelInformation"+"."+"actualFinalDestination", "body", string(o.ActualFinalDestination), 3); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyTravelInformation) validateCompleteRoute(formats strfmt.Registry) error {

	if swag.IsZero(o.CompleteRoute) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"travelInformation"+"."+"completeRoute", "body", string(o.CompleteRoute), 255); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyTravelInformation) validateDepartureTime(formats strfmt.Registry) error {

	if swag.IsZero(o.DepartureTime) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"travelInformation"+"."+"departureTime", "body", string(o.DepartureTime), 25); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyTravelInformation) validateJourneyType(formats strfmt.Registry) error {

	if swag.IsZero(o.JourneyType) { // not required
		return nil
	}

	if err := validate.MaxLength("createDecisionManagerCaseRequest"+"."+"travelInformation"+"."+"journeyType", "body", string(o.JourneyType), 32); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyTravelInformation) validateLegs(formats strfmt.Registry) error {

	if swag.IsZero(o.Legs) { // not required
		return nil
	}

	for i := 0; i < len(o.Legs); i++ {
		if swag.IsZero(o.Legs[i]) { // not required
			continue
		}

		if o.Legs[i] != nil {
			if err := o.Legs[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("createDecisionManagerCaseRequest" + "." + "travelInformation" + "." + "legs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyTravelInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyTravelInformation) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyTravelInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateDecisionManagerCaseParamsBodyTravelInformationLegsItems0 create decision manager case params body travel information legs items0
swagger:model CreateDecisionManagerCaseParamsBodyTravelInformationLegsItems0
*/
type CreateDecisionManagerCaseParamsBodyTravelInformationLegsItems0 struct {

	// Departure date and time for the each leg of the trip. Use one of the following formats:
	// - `yyyy-MM-dd HH:mm z`
	// - `yyyy-MM-dd hh:mm a z`
	// - `yyyy-MM-dd hh:mma z`
	//
	// Where:\
	// `HH` = hour in 24-hour format\
	// `hh` = hour in 12-hour format\
	// `a` = am or pm (case insensitive)\
	// `z` = time zone of the departing flight. For example, if the
	// airline is based in city A, but the flight departs from city
	// B, `z` is the time zone of city B at the time of departure.\
	// **Important** For travel information, use GMT instead of UTC, or use the local time zone.
	//
	// #### Examples
	//
	// 2011-03-20 11:30 PM PDT\
	// 2011-03-20 11:30pm GMT\
	// 2011-03-20 11:30pm GMT-05:00\
	// Eastern Standard Time: GMT-05:00 or EST\
	//
	// **Note** When specifying an offset from GMT, the format must be exactly as specified in the example. Insert no
	// spaces between the time zone and the offset.
	//
	// Max Length: 25
	DepartureDateTime string `json:"departureDateTime,omitempty"`

	// Use to specify the airport code for the destination of the leg of the trip, which is designated by the pound (#)
	// symbol in the field name. This code is usually three digits long, for example: SFO = San Francisco. Do not use the
	// colon (:) or the dash (-). For airport codes, see [IATA Airline and Airport Code Search](https://www.iata.org/publications/Pages/code-search.aspx). The leg number can be a
	// positive integer from 0 to N.
	// For example:
	//
	// `travelInformation.legs.0.destination=SFO`
	// `travelInformation.legs.1.destination=SFO`
	//
	// **Note** In your request, send either the complete route or the individual legs (`legs.0.origination` and `legs.n.destination`). If you
	// send all the fields, the complete route takes precedence over the individual legs.
	//
	// For details, see the `decision_manager_travel_leg#_dest` field description in [Decision Manager Using the SCMP API Developer Guide.](https://www.cybersource.com/developers/documentation/fraud_management/)
	//
	// Max Length: 3
	Destination string `json:"destination,omitempty"`

	// Use to specify the airport code for the origin of the leg of the trip, which is designated by the pound (#)
	// symbol in the field name. This code is usually three digits long, for example: SFO = San Francisco.
	// Do not use the colon (:) or the dash (-). For airport codes, see the IATA Airline and Airport Code Search.
	// The leg number can be a positive integer from 0 to N.
	// For example:
	// `travelInformation.legs.0.origination=SFO`
	// `travelInformation.legs.1.origination=SFO`
	//
	// **Note** In your request, send either the complete route or the individual legs (`legs.0.origination` and `legs.n.destination`). If you
	// send all the fields, the complete route takes precedence over the individual legs.
	//
	// For details, see the `decision_manager_travel_leg#_orig` field description in [Decision Manager Using the SCMP API Developer Guide.](https://www.cybersource.com/developers/documentation/fraud_management/)
	//
	// Max Length: 3
	Origination string `json:"origination,omitempty"`
}

// Validate validates this create decision manager case params body travel information legs items0
func (o *CreateDecisionManagerCaseParamsBodyTravelInformationLegsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDepartureDateTime(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDestination(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOrigination(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyTravelInformationLegsItems0) validateDepartureDateTime(formats strfmt.Registry) error {

	if swag.IsZero(o.DepartureDateTime) { // not required
		return nil
	}

	if err := validate.MaxLength("departureDateTime", "body", string(o.DepartureDateTime), 25); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyTravelInformationLegsItems0) validateDestination(formats strfmt.Registry) error {

	if swag.IsZero(o.Destination) { // not required
		return nil
	}

	if err := validate.MaxLength("destination", "body", string(o.Destination), 3); err != nil {
		return err
	}

	return nil
}

func (o *CreateDecisionManagerCaseParamsBodyTravelInformationLegsItems0) validateOrigination(formats strfmt.Registry) error {

	if swag.IsZero(o.Origination) { // not required
		return nil
	}

	if err := validate.MaxLength("origination", "body", string(o.Origination), 3); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyTravelInformationLegsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDecisionManagerCaseParamsBodyTravelInformationLegsItems0) UnmarshalBinary(b []byte) error {
	var res CreateDecisionManagerCaseParamsBodyTravelInformationLegsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DetailsItems0 details items0
swagger:model DetailsItems0
*/
type DetailsItems0 struct {

	// This is the flattened JSON object field name/path that is either missing or invalid.
	Field string `json:"field,omitempty"`

	// Possible reasons for the error.
	//
	// Possible values:
	//  - MISSING_FIELD
	//  - INVALID_DATA
	//
	Reason string `json:"reason,omitempty"`
}

// Validate validates this details items0
func (o *DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DetailsItems0) UnmarshalBinary(b []byte) error {
	var res DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*MerchantDefinedInformationItems0 Contains merchant-defined key-value pairs.
swagger:model MerchantDefinedInformationItems0
*/
type MerchantDefinedInformationItems0 struct {

	// Fields that you can use to store information. The value
	// appears in the Case Management Details window in the
	// Business Center. The first four fields are the same fields
	// that are used by the Secure Data services. See request
	// code examples.
	// **Warning** Merchant-defined data fields are not intended
	// to and must not be used to capture personally identifying
	// information. Accordingly, merchants are prohibited from
	// capturing, obtaining, and/or transmitting any personally
	// identifying information in or via the merchant-defined data
	// fields. Personally identifying information includes, but is
	// not limited to, address, credit card number, social security
	// number, driver's license number, state-issued
	// identification number, passport number, and card
	// verification numbers (CVV, CVC2, CVV2, CID, CVN). In
	// the event CyberSource discovers that a merchant is
	// capturing and/or transmitting personally identifying
	// information via the merchant-defined data fields, whether
	// or not intentionally, CyberSource will immediately
	// suspend the merchant's account, which will result in a
	// rejection of any and all transaction requests submitted by
	// the merchant after the point of suspension.
	//
	// Max Length: 255
	Key string `json:"key,omitempty"`

	// String value for the key
	// Max Length: 255
	Value string `json:"value,omitempty"`
}

// Validate validates this merchant defined information items0
func (o *MerchantDefinedInformationItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *MerchantDefinedInformationItems0) validateKey(formats strfmt.Registry) error {

	if swag.IsZero(o.Key) { // not required
		return nil
	}

	if err := validate.MaxLength("key", "body", string(o.Key), 255); err != nil {
		return err
	}

	return nil
}

func (o *MerchantDefinedInformationItems0) validateValue(formats strfmt.Registry) error {

	if swag.IsZero(o.Value) { // not required
		return nil
	}

	if err := validate.MaxLength("value", "body", string(o.Value), 255); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *MerchantDefinedInformationItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MerchantDefinedInformationItems0) UnmarshalBinary(b []byte) error {
	var res MerchantDefinedInformationItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
